//////////////////////////////////////////////////////////////////////////
//                        History of updates                            //
//////////////////////////////////////////////////////////////////////////
04-jul-1997 NvE First release of the package
11-jul-1997 NvE Class Invmass added to /GENUTILS and directories /PHYSICS
                and /TRACKING created to hold Jet and Track classes resp.
15-aug-1997 NvE Pilot patch *RALICE removed and automatic installation
                now completely performed by pure CMZ commands in the
                INSTALL macro.
12-sep-1997 NvE Signal of central cluster module and position in user
                coordinates for all modules introduced in the Calorimetry
                package.
                Also all "float vec[]" replaced by "float* vec" in the
                Lorbo class for stylistic reasons.
20-sep-1997 NvE Name of member function "getc()" of Calorimeter changed to
                "get_c()" to avoid clash with native C function.
                Also protection added in Calorimeter::group() against cases
                where no modules fired.
23-sep-1997 NvE Macro "install" modified to also enable automatic installation
                of a G++ or ROOT loadable shared library 'ralice.sl'.
24-sep-1997 NvE Class "Calorimeter" optimized by introduction of pointers
                for the Module matrix instead of an indexed array.
26-sep-1997 NvE Directory /ROOT added to hold the universal ROOT dictionaries
                (dict.h and dict.cc) as generated by "rootcint" for all the
                classes of this RALICE package.
                This will allow automatic installation of the RALICE library
                without running "rootcint".
30-sep-1997 NvE 2-body decay added to class Track and invokation of "delete []"
                only performed in case the object exists in the destructors
                of the Calorimeter, Jet and Track classes.
02-oct-1997 NvE Installation for MSVC++ added into macro "install" and several
                "return 0.;" statements added in some "Sample" member functions.
                The latter caused MSVC++ compiler errors.
                Also 'int ..=fabs(int..)' changed to 'int ..=int(fabs(int..))'
                in "Cluster::Add()" to prevent G++ warning.
03-oct-1997 NvE The above code is now ANSI compatible, but MSVC++ 5.0 still
                gives an error when comp. extensions are switched off (flag /Za).
                The reason is probably an incorrect implementation of the ANSI
                type conversion rules in MSVC++. To satisfy MSVC++ for the moment
                the code in in "Cluster::Add()" has been changed to
                'int ..=int(fabs(double(int..)))' so that at least a Microsoft
                compatible RALICE.DLL can be produced. As soon as G++ is able
                to produce Microsoft compatible dll's the support for MSVC++
                will be dropped for ralice.cmz.
                Message to all : USE G++ AS COMPILATION STANDARD !
                Also CMZ standard adopted to include a "$" in the DECK names
                which contain KEEP definitions.
13-oct-1997 NvE Compiler directive for g++ changed in "flogon" and "install"
                to provide warning for each non-ANSI C++ statement.
                Also ROOT libs linked with g++ in "install" in case of
                ROOT loadable shared library creation.
                Unused variables removed in "Calorimeter::add_ring" and
                "Track::decay".
14-oct-1997 NvE Strict ANSI requirements dropped for ROOT loadable lib creation
                to avoid many harmless warnings from rootcint generated code.
                Class "Random" added to /GENUTILS and /ROOT updated accordingly.
14-oct-1997 NvE Class "Random" extended with user definable distribution and
                /ROOT updated accordingly.
19-oct-1997 NvE Class "Random" extended with vector facility for user
                defined dist. and also bug fixed. /ROOT updated accordingly.
27-oct-1997 NvE Class "Random" optimised for user definable distribution and
                /ROOT updated accordingly.
10-dec-1997 NvE Creation of MSVC++ loadable library introduced in "install".
12-dec-1997 NvE Keep and Deck in /ROOT given unique names to enable loading
                of this package together with other packages.
20-jan-1998 NvE New ralicedict produced because of new ROOT 1.03/09 version.
23-mar-1998 NvE Macro "install" modified to support HP-CC.
                Multiple usage of for-loop index names removed to satisfy HP-CC
                compiler (although the original code was ANSI C++).
                Cluster data just reset to 'empty cluster' in case of cluster
                'creation' or 'start' for edge module or no-signal module.
31-mar-1998 NvE Array index bug fixed in class Jet.
03-apr-1998 NvE Jet and Invmass classes optimised by using pointers and
                compiler options /GD and /DWIN32 introduced for msvc++
                in order to optimize for windows DLL's and ensure correct
                pre-processing in RConfig.h for ROOT library creation.
13-apr-1998 NvE ROOTCINT processing implemented in $KUMACS/INSTALL and
                contents of /ROOT updated accordingly.
                Class Vertex added to /TRACKING and classes Track and Jet
                protected against modifying of returned addresses.
14-apr-1998 NvE "rm .def" removed for Unix systems in $KUMACS/INSTALL since
                on Unix no .def file is created by ROOTCINT.
17-apr-1998 NvE Return type Track& changed to Track* in the get_trk()
                member functions of the Jet and Vertex classes.
21-apr-1998 NvE Classes Track, Vertex, Jet, Lorbo and Invmass derived from
                TObject to enable ROOT I/O.
                $KUMACS/FLOGON and $KUMACS/INSTALL updated accordingly.
26-apr-1998 NvE Classes Module, Cluster and Calorimeter derived from TObject
                to enable ROOT I/O.
                Functionality of class Calorimeter has also been extended to
                enable re-clustering of original Module signals.
28-apr-1998 NvE Decay produced Tracks in class Track stored also into TObjArray
                to allow direct I/O.
03-jun-1998 NvE MSVC++ compiler option /DWIN32 removed in $KUMACS/INSTALL
                because of bug fix in ROOT version 2.00.
                Printout of version number introduced in $KUMACS/FLOGON and
                DOC section updated for new email and www address.
17-aug-1998 NvE New ALICE coding conventions adopted and automatic marking
                of 'edge modules' introduced in class AliCalorimeter.
                The automatic treatment of edge modules required new member-
                functions EdgeUp() and EdgeDown() in class AliModule.
19-aug-1998 NvE Call to LoadMatrix() added in AliCalorimeter::Group()
                to correctly treat different event sizes (i.e. empty events)
                when reading data from input file(s).
25-aug-1998 NvE AliCalorimeter::GetModule() introduced to provide quick
                access to all 'fired' modules.
27-aug-1998 NvE GetSignal() and GetClusteredSignal() of AliModule now
                return 0 in case the module was marked as dead.
                Because of the above, protection against row=col=0
                introduced in AliCalorimeter::Group().
                To enable access of modified calorimeter module data via
                AliCalorimeter::GetModule() after reading in, the "fModules"
                elements are updated in AliCalorimeter::LoadMatrix().
16-sep-1998 NvE Correct deletion of the module matrix introduced in the
                AliCalorimeter destructor and AliCalorimeter::LoadMatrix().
16-oct-1998 NvE New ALICE coding conventions adopted. This resulted in
                modifications in /$KUMACS and /ROOT (.cxx extension instead of .cc)
                and /HEADERS (public class area in front of private).
                #include <iostream.h> added in AliCluster (thanks to A.Zvyagin).
19-oct-1998 NvE Protections agains crazy row,col numbers introduced in
                AliCalorimeter (thanks to E. van der Pijll).
22-oct-1998 NvE Bug fixed in setting edge values in SetDead() and SetAlive()
                of AliCalorimeter (thanks to E. van der Pijll).
                Also row and column dispersion introduced in AliCluster.
24-oct-1998 NvE Memberfunctions DrawModules() and DrawClusters() introduced
                in AliCalorimeter.
                Also AliRandom derived from TObject to enable ROOT I/O.
26-oct-1998 NvE DrawModules() and DrawClusters() histogram axes defined such
                that the X and Y axis corresponds to columns and rows resp.
                in AliCalorimeter. This view matches the 'common sense'.
06-nov-1998 NvE SetDirectory(0) invoked for the histos created in
                DrawModules() and DrawClusters() to suppress global character
                of the histo pointer.
16-nov-1998 NvE New class AliMath implemented in /GENUTILS and /ROOT
                updated accordingly.
23-jan-1999 NvE New class AliSignal implemented and AliCalorimeter extended
                to contain veto signal information.
25-jan-1999 NvE Most of the private areas modified into protected areas to enable
                the use of inheritance.
                Also support for veto signal information introduced in AliCluster.
04-feb-1999 NvE Cluster array for internal use removed in AliCalorimeter; now only
                the "TObjArray* fClusters" is used for performance optimalisation.
06-feb-1999 NvE New class AliPosition implemented for universal position handling
                and AliSignal, AliCluster and AliVertex all derived from AliPosition.
                AliModule inherits from AliSignal and arguments of SetPosition()
                and GetPosition() in AliCalorimeter updated to match the AliSignal
                inheritance of AliModule. 
11-mar-1999 NvE All types changed to Int_t, Float_t etc... in order to guarantee
                portability of all data within the ROOT framework.
12-mar-1999 NvE Default destructors added in AliInvmass, AliLorbo and AliSample.
30-mar-1999 NvE New base class Ali3Vector introduced for universal 3D vector handling
                and AliPosition derived from it.
                In AliSignal::Reset() memberfunction call introduced instead of setting
                datamembers; this enhances flexibility for base class development.
01-apr-1999 NvE "car" introduced as default frame for Ali3Vector::Print().
03-apr-1999 NvE New base class Ali4Vector introduced for universal handling of
                Lorentz 4-vectors.
                Also class AliBoost introduced to perform Lorentz boosts on Ali4Vector
                objects. This class will replace the old AliLorbo.
                Memberfunction Print() renamed to Info() for Ali3Vector, Ali4Vector
                and AliBoost to prevent clash with TObject::Print().
05-apr-1999 NvE Functionality of Ali3Vector and Ali4Vector extended with += etc...
06-apr-1999 NvE Class AliTrack derived from Ali4Vector and updated accordingly.
                Also class AliJet modified by deriving it from AliTrack. 
08-apr-1999 NvE Class AliVertex derived from AliJet and updated accordingly.
                Also recursive printing facilities List() and ListAll() introduced
                for AliTrack, AliJet and AliVertex.
09-apr-1999 NvE Obsolete classes AliLorbo and AliInvmass removed.
                A new AliInvmass class is planned to provide invariant mass reconstruction
                functionality to serve e.g. di-lepton and pi0 studies.
16-apr-1999 NvE New class AliInvmass introduced for invariant mass and comb. bkg. reconstruction.
21-apr-1999 NvE AliBoost::SetGamma() introduced for enhanced accuracy in boost parameters.
27-apr-1999 NvE AliModule and AliCluster classes renamed to AliCalmodule and AliCalcluster resp.
                in view of future general Aliroot base classes AliModule and AliCluster.
28-jun-1999 NvE Ali4Vector casting changed in AliVertex::Add() and some explicit type conversions
                added and an unused variable removed in AliInvmass to prevent g++ errors/warnings
                (thanks to Eugene van der Pijll).
23-sep-1999 NvE Errors and error propagation introduced in Ali3Vector in view of track
                reconstruction/extrapolation development.
                Also AliPosition and AliSignal updated accordingly by introducing the
                SetPositionErrors(), SetSignalErrors() and Get memberfunctions.
                Note : Errors (propagation) not yet fully implemented in Ali4Vector and
                       AliBoost. 
24-sep-1999 NvE In Ali4Vector internally the Lorentz invariant (x^mu x_mu) is now stored
                instead of the scalar part x^0. This will yield better precision and
                e.g. automatically conserves the particle identity (mass) in elastic
                collisions. 
08-oct-1999 NvE GetResultError() introduced in Ali3Vector to provide error information
                on results obtained from operations which yield a scalar.
                Examples are the error on the norm (GetNorm) and the dotproduct (Dot).
13-oct-1999 NvE Errors and error propagation fully implemented in Ali4Vector.
15-oct-1999 NvE Algorithms for error calculations optimised for accuracy in Ali3Vector
                and Ali4Vector.
                Also particle mass datamember removed from AliTrack, since this is now
                automatically handled via the SetInvariant()/GetInvariant() memberfunctions
                of Ali4Vector.
16-oct-1999 NvE Storage of multiple signal values (with errors) implemented in AliSignal
                and AliCalmodule updated accordingly.
                All documentation moved from the .h files into the .cxx files and also
                Copyright and cvs logs introduced.
                Html documentation generated for all classes using the ROOT automatic
                documentation generator facility.
18-oct-1999 NvE Classes Ali3VectorObj, Ali4VectorObj and AliPositionObj introduced.
20-oct-1999 NvE AliTrack::AddSignal() & co. added to enable relating AliSignals to a certain
                AliTrack object in view of track reconstruction development.
                Also memberfunction Info() added to AliSignal.
24-oct-1999 NvE Full error propagation implemented in AliBoost and obsolete memberfunction
                AliBoost::SetGamma() removed.
25-oct-1999 NvE Undefined "dtheta2" fixed in Ali3Vector::GetErrors() thanks to Rene Brun.
29-oct-1999 NvE Compress() invoked for TObjArray fModules after removal of a single module
                in AliCalorimeter::Reset().
                Begin- and endpoint introduced for AliTrack.
30-oct-1999 NvE Pointer handling introduced instead of object copying in AliCalorimeter::Sortm
                to enhance speed. Also AliCalorimeter::GetModule(row,col) introduced.
                Array creation moved out of default constructor of AliSignal to comply with
                ROOT I/O requirements.
31-oct-1999 NvE AliCalmodule::GetSignal() removed; the AliSignal memberfunction is used
                instead and AliCalorimeter::GetSignal() takes care of the dead modules. 
                AliCalcluster::Start updated accordingly.
                New memberfunctions GetVetoLevel() and HasVetoHit() introduced 
                for AliCalcluster. 
18-jan-2000 NvE AliCalorimeter updated to remove memory leak and to enable event mixing.
                Module and position pointers and various attributes (like edge values etc...)
                are now saved in separate matrices for the complete calorimeter. 
                AliCalmodule and AliCalcluster updated accordingly and also cleaned up
                a little to remove unneeded datamembers. 
03-mar-2000 NvE AliCalorimeter::SetSignal() updated to provide position for new modules
                and AliCalorimeter::AddSignal() updated to invoke AliCalorimeter::SetSignal()
                in case of new modules instead of having duplicate code.
                (Thanks to Eugene van der Pijll).
12-mar-2000 NvE Computation of Integer Order Modified Bessel functions I_n(x) and K_n(x)
                introduced in class AliMath.
                Also already existing AliMath facilities converted to Double_t handling
                to enhance flexibility.
06-jun-2000 NvE AliMath::K() etc... renamed to AliMath::BesselK() etc... for clarity.
07-jun-2000 NvE Vertex linking of AliVertex::Add(AliVertex&) made more sophisticated
                by introduction of automatic generation of connecting track.
26-jan-2001 NvE File RALICELinkDef.h updated to allow the automatic schema evolution
                as introduced in ROOT 3.00/05. 
27-may-2001 NvE New class AliEvent introduced and RALICELinkDef.h & co. updated accordingly.
                Also RALICELinkDef.h changed back to old schema evolution (i.e. "+" removed)
                because of problems with I/O in ROOT 3.00/06 w.r.t. multiple inheritance. 
29-may-2001 NvE Position reset added in AliVertex::Reset().
01-jun-2001 NvE Memberfunctions Add() renamed explicitly to AddTrack(), AddJet() and
                AddVertex() in AliJet and AliVertex.
03-jun-2001 NvE Treatment of masshypotheses introduced in AliTrack.
04-jun-2001 NvE CVS Log text and keyword replaced by Id in .cxx files and C++ comment
                indicator /* ... */ replaced by // in the Id record of the .h files
                to prevent problems.
06-jun-2001 NvE CVS Date keyword introduced in 'Modified' field in .cxx files so that
                the modification date is updated automatically in the html docs.
09-jun-2001 NvE Script mklibs.bat modified to match its new location in the SCRIPTS
                subdirectory and file RALICEHeaders.h moved back to the RALICE
                directory again to enable universal installation scripts.
                Also name AliEvent.cxx added in Makefile.
11-jun-2001 NvE ResultError correctly set in GetMomentum() of AliTrack and AliJet.
12-jun-2001 NvE Error calculation improved for spherical and cylindrical coord.
                in Ali3Vector::GetErrors().
13-jun-2001 NvE Memberfunctions GetVecTrans() and GetVecLong() introduced for
                Ali3Vector and Ali4Vector.
                Also GetScaTrans(), GetScaLong() and GetPseudoRapidity() introduced
                for Ali4Vector to provide a basis for e.g. E_trans and E_long calc.
                Memberfunctions GetPt(), GetPl(), GetEt(), GetEl() and GetMt()
                introduced for AliTrack and AliJet.
                For AliTrack there is an additional GetMt(j) to provide the Mt
                value for the jth mass hypothesis.                
14-jun-2001 NvE Memberfunction GetRapidity() introduced for AliTrack and AliJet
                and accuracy improved in Ali3Vector::GetPseudoRapidity().
27-jun-2001 NvE Overloaded memberfunction names Add(AliJet*) and Add(AliVertex*) corrected
                into AddJet(AliJet*) and AddVertex(AliVertex*) in class AliVertex.
29-jun-2001 NvE TrackCopy mode introduced in AliJet.
02-jul-2001 NvE Misplaced statement corrected in AliJet::SetNtinit().
03-jul-2001 NvE Protections added in AliJet::GetTrack() and AliVertex::GetVertex() and
                VertexCopy introduced in AliVertex.
                Naming facility introduced in AliCalorimeter in order to identify
                different calorimeter systems in an event structure.
                Storage of jets introduced in AliVertex on the same footing as the
                storage of (secondary) vertices.
04-jul-2001 NvE Storage of calorimeters introduced in AliEvent and ResetVertices()
                added to AliVertex.
05-jul-2001 NvE Clone() facility used in AddTrack() etc... of AliEvent & co. instead of
                "new" in the case of TrackCopy etc... This in order to enable 'permanent'
                AliTrack etc... storage in AliEvent & co.
                Also (Ali4Vector&) casting stmt. in AliVertex::ResetVertices() changed
                to make it ANSI compatible for all compilers/platforms.  
09-jul-2001 NvE Support for impact points and user identifier introduced in AliTrack.
                Also user identifier facility introduced for AliJet and AliVertex.
12-jul-2001 NvE Memberfunction GetDistance() introduced for AliPosition and support for
                point of closest approach introduced in AliTrack.
24-jul-2001 NvE Support for Chi2 and NDF information of track fit introduced in AliTrack.
01-dec-2001 NvE SetOwner() introduced for certain TObjArray's in AliCalcluster, AliEvent,
                AliInvmass, AliJet, AliTrack and AliVertex to adapt to the new memory
                management of ROOT 3.01 (and later) in case of reading trees.
06-dec-2001 NvE Memory usage optimised for AliVertex & co. and memory leak due to
                cloning solved.
07-dec-2001 NvE ClassDef() and ClassImp() statements introduced for AliSample.
17-dec-2001 NvE Copy constructor and Init() memberfunction introduced for AliTrack & co.
14-jan-2002 NvE New schema evolution activated via the "+" behind the classnames
                in RALICELinkDef.h. Note that the new schema evolution only works
                correctly for ROOT version 3.02/07 and later.
14-feb-2002 NvE Support for name tag introduced in AliSignal to indicate the kind of signal.
                Missing comment lines added in SetName() and GetName() of AliCalorimeter and AliSignal.
19-mar-2002 NvE AliVertex::Draw() introduced to enable 3D event display. 
25-apr-2002 NvE Projectile and target specifications introduced in AliEvent.
26-apr-2002 NvE AddVetoSignal(AliSignal) introduced in AliCalorimeter and AliCalcluster
                to provide more flexibility and allow automatic calculation of
                hit association confidence level based on position uncertainties.
29-apr-2002 NvE Memberfunction GetNvalues() and copy constructor introduced in AliSignal.
25-jun-2002 NvE Memberfunction SetOwner() introduced in AliJet, AliVertex and AliEvent to allow
                to set ownership of "added objects" in the case of reading data from a file.
                In this way possible memory leaks can always be prevented.
                Also automatic extrapolation and confidence level calculation of associated
                veto hits introduced in AliCalorimeter and AliCalcluster.
28-oct-2002 NvE "Riostream.h" introduced to replace the standard C++ includes and 
                static_cast<int> introduced in AliVertex::Draw to prevent a warning
                message for the new gcc compiler version.
25-nov-2002 NvE User defined particle id code introduced in AliTrack.
27-nov-2002 NvE New class AliCollider introduced and RALICEHeaders.h and RALICELinkdef.h
                updated accordingly.
29-nov-2002 NvE Typo corrected in AliCollider.cxx.
30-nov-2002 NvE Vertex position errors based on fResolution introduced in AliCollider.cxx.
02-dec-2002 NvE Facility for user defined projectile and target particle ID introduced in
                AliEvent and projectile/target information provided in the AliCollider created
                event structure.
11-dec-2002 NvE Copyright notice added into AliCollider.h and AliCollider.cxx.
                Also small (integer division) modification made in AliCollider.cxx
                to prevent an innocent warning of the g++ compiler under Linux.
08-jan-2003 NvE Delete statements for fMatrix[i] and fPositions[i] added in the dtor of
                AliCalorimeter to fix a memory leak.
09-jan-2003 NvE Different modes introduced for AliCalorimeter::Reset() to prevent memory
                leaks in reading back AliCalorimeter objects from a data file.
                Also unnecessary "LoadMatrix()" statement removed in AliCalorimeter::Reset().
                Irrelevant cout statement removed from AliEvent constructor.
01-feb-2003 NvE Memberfunction Info() renamed to Data() in various classes in order to
                prevent problems w.r.t. TObject::Info due to probable root/cint bug. 
03-feb-2003 NvE File "gcclib" added to subdirectory "scripts" to provide Ralice installation
                script for Linux machines using gcc.
                Class AliObjMatrix introduced.
08-feb-2003 NvE Class AliSignal modified such that the maximum number of signal slots is
                handled completely dynamically at runtime.
                Memberfunctions SetSignal() and AddSignal() of class AliCalmodule declared
                virtual to enable inheritance.
09-feb-2003 NvE Class AliCalcluster derived from AliSignal to enable automatic signal setting
                for various rings of modules around the cluster center.
10-feb-2003 NvE Class AliSignal modified such that also signals without errors can be stored.
                This may minimise memory occupation and output file size. 
18-feb-2003 NvE Memberfunction ShowCalorimeters() introduced in AliEvent to display an overview of all
                available calorimeter systems.
                Date/time format changed and ShowCalorimeters() invoked in AliEvent::HeaderData().
08-mar-2003 NvE Compiler option /GR introduced for MSVC++ in mklibs.bat to explicitly enable
                the C++ RTTI. This prevents a warning when creating shared libraries
                using the "old streamer method" (i.e. NO "+" behind the class names
                in the Linkdef file).
10-mar-2003 NvE AliPosition datamembers of AliTrack changed into AliPositionObj* to enable
                minimisation of memory occupation and output file size in case a track
                has not all attributes set.
13-mar-2003 NvE Memberfunction SetZero() introduced for Ali3Vector and Ali4Vector.
20-mar-2003 NvE Statement #include "Riostream.h" moved from header file into implementation file
                for all classes and MSVC compiler option /Za replaced by /Ze in order to prevent
                ANSI compliant compiler problems.
15-apr-2003 NvE Waveform histogram introduced in AliSignal.
29-apr-2003 NvE Memberfunction MakeCopy introduced for AliSignal and AliCalmodule.
                This memberfunction enables automatic creation of new objects of the
                correct type depending on the argument type, a feature which may be very useful
                for containers like AliCalorimeter when adding objects in case the
                container owns the objects. This feature allows e.g. AliCalorimeter
                to store either AliCalmodule objects or objects derived from AliCalmodule,
                provided these derived classes also have a proper MakeCopy memberfunction. 
17-jun-2003 NvE All TString objects "s" replaced by "s.Data()" in cout statements to comply
                with MSVC++7.NET compiler and allow mixing with MSVC++6 libraries.
                The classes in which these modifications were made are Ali3Vector, Ali4Vector,
                AliSignal and AliEvent. 
20-jun-2003 NvE Copy constructor introduced for nearly all classes and also all destructors
                explicitly declared virtual.
11-jul-2003 NvE Functionality of AliObjMatrix extended by enabling removal of objects and
                introduction of a linear object array for fast looping over the stored objects.
15-aug-2003 NvE Usage of TMCParticle removed from AliCollider; only Pythia intrinsic functionality
                is used.
01-sep-2003 NvE Explicit initialisation of TObject() introduced in default constructor of AliObjMatrix.
16-sep-2003 NvE Parent track pointer introduced for AliTrack.
                Functionality of AliSignal extended and support for gains and offsets introduced.
                Gain datamember removed from AliCalmodule.
17-sep-2003 NvE Memberfunction AddTrack with second argument "copy" of AliJet moved into the
                "protected" area to avoid confusion among users.
                The user has now only access to the AddTrack memberfunction with only the track
                (pointer) as argument.
23-sep-2003 NvE New classes AliAttrib and AliAttribObj introduced to centralise the handling of
                name, gain, offset, edge and dead value attributes for a certain slot.
                Classes AliSignal and AliCalmodule updated accordingly.
28-sep-2003 NvE Facility for automatic gain etc... correction introduced in AliSignal::GetSignal().
30-sep-2003 NvE New version of AliCalorimeter introduced, making use of AliObjMatrix and AliAttribObj
                and supporting full treatment of module gains, offsets etc...
                Also class AliCalcluster updated to take gain etc... correction into account.
02-oct-2003 NvE Memberfunction Load() moved from Ali3VectorObj and Ali4VectorObj to Ali3Vector
                and Ali4Vector respectively. This allows to use this memberfunction also in
                all the derived classes (e.g. AliPosition, AliSignal, AliTrack, etc...).
                Therefore the Load() memberfunction has been removed from AliPositionObj.
03-oct-2003 NvE Typos fixed in AliCalorimeter.cxx.
                Also memberfunction MakeCopy introduced in class AliCalorimeter.
07-oct-2003 NvE Arguments of SetSignal and AddSignal memberfunctions of AliCalmodule corrected
                to comply with the corresponding virtual functions of AliSignal.
                AliCalorimeter modified accordingly.
09-oct-2003 NvE Argument of all MakeCopy memberfunctions removed to obey the ANSI C++ rules for
                virtual functions and to prepare for a common base class.
                Due to the fact that not all compilers seem to accept the standard ANSI rule
                that a virtual function is allowed to differ in return type from the corresponding
                virtual function in the base class, the MakeCopy() memberfunctions have all been
                given a return type of TObject*.
                Also AliAttrib::Data renamed to AliAttrib::List to prevent violation of ANSI virtual
                function rules and class AliSignal updated accordingly. 
                Memberfunction ResetPosition() moved from AliSignal to AliPosition.
                Explicitly declared all memberfunctions virtual in the derived classes in case
                the corresponding memberfunctions were also declared virtual in the base class.
                Various memberfunctions which were declared virtual but were actually not meant
                to be overridden declared as non-virtual in various low-level classes like
                Ali3Vector, Ali4Vector, AliPosition etc...
13-oct-2003 NvE Argument 'npt' of AliCollider::MakeEvent also made optional.
24-oct-2003 NvE Private memberfunction Dump of AliTrack and AliVertex renamed to Dumps in order
                not to override the Dump memberfunction of TObject.
                Also definition of AliVertex::Draw slightly modified to comply with the standard
                ANSI virtual function rules concerning TObject::Draw.
                Invokation of ClassName() used in printout of AliSignal::Data to make the output
                information more generic. 
25-oct-2003 NvE Memberfunction AddCalorimeter of AliEvent replaced by memberfunction AddDevice
                to make the functionality more generic.
                To comply with the enhanced flexibility of AliEvent::AddDevice the class
                AliCalorimeter has been derived from TNamed and the MakeCopy() memberfunction
                has been replaced by Clone() to override the default one of TNamed.
                The specific GetName and SetName memberfunctions of AliCalorimeter have been removed.
26-oct-2003 NvE Class AliSignal derived from TNamed and MakeCopy() memberfunction replaced by Clone()
                like was done for AliCalorimeter.
                The latter was also done for AliCalmodule and AliAttribObj.
29-oct-2003 NvE Obsolete include of AliCalorimeter.h removed from AliEvent header file.
11-nov-2003 NvE Double_t dum=GetScalar() replaced by e[0]=GetScalar() in Ali4Vector.cxx to prevent
                a warning for the gcc compiler (thanks to Thomas Burgess).
                AliJet derived from TNamed instead of TObject to allow identification via name.
12-nov-2003 NvE fDaytime datamember of AliEvent changed from TDatime to TTimeStamp in order to
                obtain nanosecond precision. Setting of date and time via a TDatime argument is
                still supported to provide backward compatibility.
13-nov-2003 NvE Invokation of AliAttrib memberfunction Data() replaced by List() in the example
                in AliAttrib.cxx (was just a typo; thanks Adam Bouchta).
                Also test on pointer value introduced in AliAttrib::GetSlotIndex to prevent
                crash when first slot is empty (thanks to Adam Bouchta).
21-nov-2003 NvE Variable names of type "const" started with the character "k" in various
                memberfunctions of AliMath in order to comply with the strict Alice
                coding conventions.
22-nov-2003 NvE Support for various computation modes introduced in AliMath::Prob.
23-nov-2003 NvE New memberfunctions GetBetaVector(), GetBeta() and GetGamma() introduced in Ali4Vector.
03-dec-2003 NvE Message removed from AliEvent::GetDevice in case there are no devices present.
05-dec-2003 NvE Memberfunction SetStable introduced in AliCollider for the user's convenience.
08-dec-2003 NvE AliTrack derived from TNamed to enhance labeling flexibility and also specific
                Clone memberfunction introduced to enable storage of derived objects in AliJet & co.
                Also specific Clone memberfunctions introduced for AliJet, AliVertex and AliEvent and
                for the already existing specific Clone memberfunctions the default argument was set
                to the empty string "".
15-dec-2003 NvE Datamembers fNdec and fNsig removed from AliTrack since these data are now retrieved
                directly from the corresponding arrays.
                Support for hypothesis probability introduced in AliTrack and old mass hypothesis
                machinery extended to provide now full track hypotheses.
18-dec-2003 NvE Support for object references from the various signal slots introduced in AliSignal.
                Since this is mainly intended for "backward references" to AliTrack objects,
                the AliTrack class has been slightly updated for this to provide pointer consistency
                in case the corresponding AliTrack object is deleted.
19-dec-2003 NvE Slight modification in AliVertex.h and AliAttribObj.cxx to prevent gcc compiler
                warning concerning an unused variable.
22-dec-2003 NvE Event selection introduced in AliCollider.
24-dec-2003 NvE Some cosmetics in printout of AliVertex, AliEvent and AliCollider.
                Support for spectator tracks introduced in AliCollider.
28-dec-2003 NvE Facility introduced in AliCollider to set minimal momentum for spectator tracks
                to be stored. 
06-feb-2004 NvE "char* name" changed to "const char* name" in all specific Clone memberfunctions
                to prevent compiler warnings on Sun.
                Memberfunction Set() of TTimeStamp used in AliEvent instead of setting the date/time
                via the TTimeStamp constructor. This is only possible with ROOT version 3.10/02 or later,
                since for earlier versions the TTimeStamp::Set memberfunctions were erroneously declared
                private. 
11-feb-2004 NvE In script "gcclib" the option -Wno-long-long added to prevent warnings from the usage
                of type "long long" in Rtypes.h
12-feb-2004 NvE In AliCollider::MakeEvent the statement "char* name" was replaced by "char name[16]" to
                comply with TPythia6 convention. Also the hardcoded values of the p and n masses have
                been replaced by masses obtained from the Pythia system via a call to GetPMAS(). 
                Because of a bug in TPythia6 the function Pymass() couldn't be used directly.
13-feb-2004 NvE AliCollider::GetPyname introduced to provide a correctly stripped character string
                for the particle names. The name returned by TPythia6::Pyname contains trailing
                characters due to an incorrect stripping process.
                AliCollider::MakeEvent was updated accordingly to make use of this new memberfunction.
04-mar-2004 NvE Functionality of AliObjMatrix extended to provide the number of references and
                (row,col) indices of all the occurrences of the stored objects.
                Also an additional memberfunction AliObjMatrix::RemoveObject introduced to allow more
                flexibility in specifying objects to be removed. 
09-mar-2004 NvE Additional memberfunction AliObjMatrix::RemoveObject renamed to RemoveObjects to prevent
                confusion and ambiguity in usage.
                Linking facility of AliSignal extended by enabling multiple links to a specific signal slot.
                Also call to AliSignal::ResetLink changed to AliSignal::ResetLinks() in the dtor
                of AliTrack to adopt the extended AliSignal linking facility and output in 
                AliTrack::ListAll() limited to only the referring signal slots to prevent long output lists.
12-mar-2004 NvE Additional "cout << endl;" in front of AliCollider initialisation message in order to always
                have the initialisation message starting on a new line. On some systems the fortran
                carriage control of the pure Pythia doesn't get treated correctly.
04-apr-2004 NvE SetMass() invoked from AliTrack::Set3Momentum to get also the energy properly initialised.
09-apr-2004 NvE Support for specification of unit scale introduced in AliPosition.
19-apr-2004 NvE Memberfunction GetPrimed introduced for Ali3Vector.
04-may-2004 NvE Various memberfunctions declared "const" to satisfy the strict Alice coding rules
                and also to allow better compiler optimisation.
12-may-2004 NvE Track reference-point introduced in AliTrack.
02-jun-2004 NvE Memberfunction GetUnprimed introduced for Ali3Vector.
17-jun-2004 NvE New class AliHelix introduced and "macgcclib" added to create ralice libs on MAC.
24-jun-2004 NvE Coefficient kp7 changed from 7.4e-5 to 7.4e-6 in AliMath::BesselK0 to correct typo
                (thanks Josh de Bever).
                Typos corrected (i.e. abs() replaced by fabs() in several places) in AliHelix
                to satisfy the Intel compiler (thanks Fons Rademakers).
25-jun-2004 NvE Protection introduced in AliSignal::GetNlinks.
29-jun-2004 NvE New class AliDevice introduced.
                New memberfunctions and datamembers introduced in AliEvent to support investigation
                and ordering of hits of various (classes of) devices.
01-jul-2004 NvE AliCalorimeter derived from AliDevice to extend functionality (e.g. allow definition
                of sets of calorimeters and investigate all the hits of a certain set via the
                AliEvent structure). To prevent matrix swapping restrictions, the memberfuctions
                SetSwapMode and GetSwapMode of AliCalorimeter have been renamed to SetMatrixSwapMode
                and GetMatrixSwapMode, respectively. 
                Examples in the AliEvent.cxx documentation updated accordingly. 
                Backward links reset for non-owned hits in AliDevice destructor.
06-jul-2004 NvE AliCalorimeter hit I/O only via the linear array to decrease filesize on disk
                and improve I/O speed.
                Internal temp. arrays used for hit sorting in AliDevice and AliEvent and array
                pointers returned instead of the arrays themselves. This will provide more
                flexibility in usage. 
                Sorting and clustering procedures in AliCalorimeter modified to use TObjArray pointers
                to enable direct use of the AliDevice linear sorting facility.
                Default for AliDevice changed such that now all registered hits are by default owned
                by the AliDevice object.
06-oct-2004 NvE Full support for data access via slotname specification introduced in AliAttrib and AliSignal.
07-oct-2004 NvE Docs of AliAttrib and AliSignal updated for new data access via slotname specification.
12-oct-2004 NvE Display facility introduced in AliDevice and device backward linking updated for
                new "owning device" in AliSignal.
13-oct-2004 NvE Hit investigation facilities extended in AliDevice and AliEvent.
15-oct-2004 NvE Optimisation of MC parameters for nucleus-nucleus and astrophysics processes introduced
                in AliCollider. Also facilities added to provide full user control.
26-nov-2004 NvE Printout of UniqueID added in AliSignal::Data() and AliEvent::ShowDevices() in view of
                addressing specific signals or devices during data analysis.
                Memberfunction GetIdHit introduced in AliDevice and AliEvent and AliJet::GetIdTrack
                optimised for speed.
                Memberfunction GetIdDevice introduced in AliEvent.
27-nov-2004 NvE Protection for j<1 introduced in AliSignal::SetWaveform().
                The waveforms in AliSignal have now become completely decoupled from signal slots,
                so support for setting waveforms by specifying a slotname has been removed. 
                Printout info in AliSignal::Data() and AliSignal::List() improved and memberfunctions
                ListWaveform() and GetWaveformIndex() introduced in AliSignal.
28-nov-2004 NvE User definable status word introduced in AliDevice to allow indication of different
                versions of readout electronics etc... 
29-nov-2004 NvE Additional sub-directories (e.g. wa98) introduced which contain Ralice implementations
                to serve data analysis efforts for various experiments.
01-dec-2004 NvE Install scripts like e.g. "gcclib" renamed to "gcclib.sh" etc... in /scripts.
                The old scripts (i.e. without the .sh extension) will be deleted in due time.
12-jan-2005 NvE Bug fix in AliAttrib::GetSlotIndex() by exiting as soon as matching name is found.
20-jan-2005 NvE Modification in AliSignal::GetNwaveforms() to return last index instead of array
                size to take into account the fact that a TObjArray always gets a default size
                of 16 when reading data from a file.
                Also the standard ROOT file libNew.lib is now automatically renamed to libNew.lix
                in the Ralice windows installation script mklibs.bat to prevent linking with
                this libNew.lib which is inconsistent with the binary ROOT executable release.
09-feb-2005 NvE New class AliTimestamp introduced to support timestamp information for
                astrophysical research (i.e. Julian dates etc...) without the restrictions
                of class TTimeStamp.
10-feb-2005 NvE AliEvent modified such that it is derived from AliTimestamp.
                This will allow events to be synchronised with astrophysical phenomena without
                the restrictions imposed by TTimeStamp.
                All existing user functions have been kept to provide full backward compatibility
                in usage. However, a side effect of the new structure is that when reading data files
                containing the old event structures, the original date/time stamp information is lost and
                replaced by the date/time at the moment of reading the data.
                This implies that to restore the original event date/time, the data files have to
                be re-created. This I/O backward incompatibility could not be avoided in the
                effort of eliminating the TTimeStamp restrictions.
04-mar-2005 NvE Installation scripts named amdgcclib.sh introduced in all /scripts directories to enable
                shared library creation on AMD 64 (Athlon and Opteron) machines.
31-mar-2005 NvE AliObjMatrix derived from TNamed instead of from TObject to allow specification of
                a name and title for this class.
13-apr-2005 NvE New memberfunctions SetFitDetails and GetFitDetails introduced in AliTrack
                to enable a versatile facility to store details of various fit procedures
                for a certain track. This new facility is based on the original idea of Adam Bouchta.
                Destructor of AliSignal modified to remove the corresponding AliSignal instance
                first from all related tracks before deleting the link matrix area.
14-apr-2005 NvE Functionality of ShowDevices extended in AliEvent. Also memberfunction HeaderData() modified
                to prevent long output lists when many devices (and/or tracks) are present.
                New memberfunction ShowTracks introduced in AliJet and memberfunction Data() updated.
18-apr-2005 NvE New memberfunction GetTracks introduced in AliJet to provide various track selections.
19-apr-2005 NvE Memberfunctions GetNtracks and GetTracks of AliJet extended in functionality.
20-apr-2005 NvE Id of owning device added to the output of AliSignal::Data().
10-may-2005 NvE Support for timestamps introduced in AliTrack and AliPosition.
                Memberfunction GetX introduced in Ali3Vector for easy component access.
                Picosecond support and calculation of time difference introduced in AliTimestamp 
                to enable investigation of both very short (i.e. time of flight analysis in
                particle physics experiments) and very long (i.e. astrophysical phenomena)
                time intervals.
17-may-2005 NvE Functionality of AliTimestamp extended w.r.t. treatment of time intervals and
                accuracy bug fixed in the calculation of time difference.
19-may-2005 NvE AliTimestamp* pointer arguments supported in AliTimestamp::GetDifference for convenience
                when investigating e.g. TOF or trigger times for tracks and/or hits in analysing
                AliEvent structures.
                Also GetMJD() invoked in GetDifference to ensure to always have updated Julian parameters.
22-may-2005 NvE Class AliMath extended to provide full distribution functions of several standard
                distributions (e.g. Binomial, Poisson, Gauss) and key statistics (e.g. Chi-squared,
                Student's T, F-test) in view of analysis using Bayesian logic.
                The various distributions are provided as TF1 objects.
                In addition, functions to provide the P-values of the various key statistics are also
                introduced to allow a classical frequentist analysis as well.
25-may-2005 NvE Declaration of unused variable pi removed in AliMath::StudentDist and explicit double
                specification of integer first argument to pow() in AliMath::FratioPvalue in order
                to prevent messages from the gcc compiler (thanks Dipo, Philippe and Peter).
02-jun-2005 NvE Bug fix in copy ctor of AliPosition and beginpoint etc... setting of AliTrack.
                In AliTrack all points are now set after first deleting the existing AliPositionObj
                object instead of using the Ali3Vector::Load() memberfunction. 
                The bug arose because of the extension of AliPosition with the possibility to
                store an AliTimestamp. This made AliPosition differ from Ali3Vector w.r.t. datamembers.
                Also "cout << endl;" introduced after the Pylist() call in AliCollider in order to
                separate the Pythia event listing from subsequent output due to the mis-interpretation
                of Fortran carriage-control characters on some systems.
17-jun-2005 NvE New class AliJob introduced to provide a flexible (physics) analysis environment.
                Bug (forgotten ps transfer in AliTimestamp::SetTJD) fixed (thanks Federico Carminati).
22-jun-2005 NvE Specific job folder recursively removed from the generic AliJob folder environment
                in the AliJob destructor before actually deleting the specific job folder itself. 
                Also main object pointer updated in case of a match with removal of object(s) from
                the specific job environment.
23-jun-2005 NvE Creation of specific job folder made optionally in AliJob.
24-jun-2005 NvE Selection/overruling of specific job folder creation introduced in AliJob::ExecuteJob
                and the AliJob (derived) instance explicitly removed from the ListOfTasks to prevent
                ROOT crashing when closing after execution.
02-aug-2005 NvE Support for explicit (de)calibration functions introduced in AliAttrib.
03-aug-2005 NvE AliSignal::GetSignal has been extended to support various (de)calibration facilities.
                Printout is now also provided in AliSignal::List when only calibration data exist
                for AliDevice (or derived) objects.
05-aug-2005 NvE Typos fixed in AliAttrib::GetCalFunction and AliAttrib::GetDecalFunction which
                erroneously always returned a null pointer.
10-aug-2005 NvE AliSignal::GetSignal extended with mode=8 to support dead flag of parent device
                in conjunction with the dead flag of the signal itself.
07-oct-2005 NvE Support for the extended AliSignal::GetSignal (de)calibration facilities
                introduced in memberfunctions SortHits, GetExtremes, Displayhits and SortDevices
                of classes AliDevice and AliEvent.
                Note : For DisplayHits this new signal correction mode replaces the marker style
                       specification parameter. 
                Also new memberfunction GetDevices introduced in AliEvent.
11-oct-2005 NvE SetMJD invoked at the end of AliTimestamp::Add instead of just updating the
                various datamembers. In this way the TTimeStamp parameters are brought in sync
                with the (modified) AliTimestamp values. 
20-oct-2005 NvE Directory /macros introduced and ROOT macro makedocs.cc added in /macros
                to provide a generic method to auto-create the html class documentation
                on all supported platforms.
                For further details see /macros/makedocs.cc.
24-oct-2005 NvE Protection introduced in AliJet::AddTrack to prevent multiple storage of
                the same track in case no private copy of the track is made.
                Memberfunction GetOpeningAngle introduced in Ali3Vector and Ali4Vector.
25-oct-2005 NvE Support introduced for user selectable angular units (rad or deg) in Ali3Vector,
                Ali4Vector and all derived classes.
27-oct-2005 NvE Memberfunction GetX to access individual vector components also introduced
                for Ali4Vector.
                Also memberfunction SortJets introduced in AliVertex.
                Misleading comment modified in AliDevice.cxx.
29-oct-2005 NvE Forgotten angular unit setting fixed w.r.t. begin point etc... in AliTrack::ListAll
                ad begin point etc... info also added in AliTrack::List.
                Memberfunction SortTracks introduced in AliJet and comment corrected in AliVertex.h.
07-nov-2005 NvE Macro makedocs.cc in directory /macros modified (i.e. ";" changed by ":") to make
                it generic so that it works correctly on all platforms (thanks Axel Naumann). 
08-nov-2005 NvE Sorting memberfunctions in AliDevice, AliVertex and AliJet optimised to save
                CPU time. In case two values are identical no swap is performed.
                Basically the test "val1 < val2" was replaced by "val1 <= val2".
09-nov-2005 NvE DisplayHits memberfunctions in AliDevice updated to fully support all 
                (de)calibration modes of GetSignal for displaying (and skipping dead) hits.
14-nov-2005 NvE Hit access by name introduced in AliDevice.
15-nov-2005 NvE Support for opening angle calculation between a 3-vector and the 3-vector part
                of a 4-vector introduced in Ali4Vector.
16-nov-2005 NvE Support for a reference point introduced in AliJet.
06-dec-2005 NvE Memberfunction GetDistance() introduced in AliTrack to determine the
                distance between a track and a certain position.
12-dec-2005 NvE Track selection by name introduced in AliJet.
23-feb-2006 NvE Support for automatic subtask(s) execution introduced in AliJob::ExecuteJob().
28-feb-2006 NvE Memberfunction ProcessObject() introduced in AliJob for convenience.
14-mar-2006 NvE RemoveTracks() facilities introduced in AliJet.
17-mar-2006 NvE Support for marker of track starting point introduced in AliHelix.
                This allows observation of moving direction in event displays.
                Also support for ignoring track endpoints introduced in AliHelix to 
                allow correct display for very long tracks together with observed hits.
18-mar-2006 NvE Support for display of selected track array introduced in AliHelix.
                Also copy ctor of AliHelix made complete for new datamembers.
22-mar-2006 NvE Line attribute selections for displays extended in AliHelix.
20-apr-2006 NvE Several small modifications to prevent gcc warnings.
10-may-2006 NvE Distance determination between tracks and/or jets introduced in
                AliTrack and AliJet.
                Also compiler warnings activated for overloaded virtuals in installation
                script for AMD Athlon in the /scripts sub-directory.
22-jun-2006 NvE Linear track storage facility introduced in AliSignal to enable
                a lightweight signal <-> track backward linking facility instead of
                the elaborate signal slot related links. 
                Also the functionality of AliTrack::AddSignal extended with specific modes.
                Double_t replaced by Double32_t in Ali3Vector.h, Ali4Vector.h and AliBoost.h
                and fDresult suppressed for I/O streaming. This will reduce the produced
                output filesize.
21-jul-2006 NvE AliSample extended for computation of median.
12-sep-2006 NvE Memberfunctions GetNslots and AddNamedSlot introduced and various
                modifications made in AliAttrib and AliSignal to overcome a ROOT
                feature which always sets the size of TArray objects to a default
                of 16 when reading these objects back from a file.
                The modified AliAttrib and AliSignal don't rely on a GetSize()
                anymore, but determine the number of stored values from the
                actual array contents. 
19-sep-2006 NvE Accuracy problem solved in Ali3Vector::GetOpeningAngle.
20-sep-2006 NvE AliSample::GetMedian corrected for empty or single value arrays.
25-sep-2006 NvE AliSample extended with memberfunction GetSpread() and also
                support for providing minimum and maximum values introduced. 
12-oct-2006 NvE New memberfunction GetNsignals introduced in AliJet and jet
                ordering w.r.t. number of signals added in AliVertex.
19-oct-2006 NvE AliJet::GetNsignals modified to prevent double counting of
                multiple occurrences of the same signal.
24-oct-2006 NvE AliJet and AliVertex extended with ordering w.r.t. charge.
26-oct-2006 NvE Energy/Momentum scale indicator introduced in AliTrack and AliJet
                and support for chi2 and ndf datamembers removed from AliTrack.
                The latter can be achieved in a more flexible way via the fit
                details facility of AliTrack.
07-nov-2006 NvE Default unit scale changed from cm to meter in AliPosition
                and support introduced for user selectable unit scale
                in retrieval of position coordinates, errors and distances. 
08-nov-2006 NvE User selectable unit scale introduced for retrieval of
                physics parameters and distances in AliTrack and AliJet.
                Also the track and jet sorting memberfunctions of AliJet
                and AliVertex have been updated to use this new feature.
                Also AliHelix has been updated to use this new feature and the
                default meter metric scale. 
09-nov-2006 NvE AliCollider updated to use new standard 1 meter metric units
                and generator parameters stored in a device named "AliCollider".
                Also beam/target datamembers removed from AliEvent and storage
                of these beam/target parameters performed via a device named "Beam". 
10-nov-2006 NvE Bug fixed in AliHelix.cxx such that the original reference point
                of the track itself is not modified when the user had specified
                a different scale. Also GetLastPoint() used in AliHelix to obtain
                the index of the last point instead of relying on the dimension
                of the points array as obtained with GetN(). This increases the
                accuracy of extrapolation (and drawing) resuls since no undefined
                points are now used anymore.
01-dec-2006 NvE AliTimestamp::Add() updated to allow specification of large time differences
                also by giving e.g. only a certain number of seconds instead of explicitly
                giving the time difference in elapsed days, remaining elapsed seconds etc...
                This is very convenient by time manipulations based on GPS data.
                The extension has been realised by just replacing the relevant if()
                statements by while() loops in determining the remaining fractional counts.
                Furthermore, some modulo operations have been introduced to prevent
                integer overflows.
08-dec-2006 NvE Memberfunctions SetUT introduced in AliTimestamp to provide convenient
                ways to set a specific UT date/time.
20-jan-2007 NvE AliMath extended with Nfac(), LnNfac() and LogNfac() facilities.
08-mar-2007 NvE AliSample extended with Median and Spread calculation for 1D histograms.
15-mar-2007 NvE AliTimestamp extended with Sidereal Time and Besselian Epoch.
                Date/time retrieval via epoch specification introduced and UT time made
                accessible even for cases which fall outside the TTimeStamp range.
                As such, the UT and GST info will always be provided via the Date()
                memberfunction.
16-mar-2007 NvE Uniform data format introduced for printout of AliTimestamp::Date().
17-mar-2007 NvE AliTimestamp extended to allow local time printout for a specified offset
                and addition of a time difference specified as (fractional) hours.
                Also bug fixed in the fractional hour conversion facility.
20-mar-2007 NvE Support for retrieval of Local Time (LT) and Local Sidereal Time (LST)
                introduced in AliTimestamp.
22-mar-2007 NvE Support introduced for setting of timestamp parameters based on Local Time (LT)
                in AliTimestamp.
25-mar-2007 NvE AliTimestamp extended with Apparent Sidereal Time.
27-mar-2007 NvE Test on date/time validity corrected in AliTimestamp::SetMJD to prevent
                crash in TTimestamp invokation for very future dates.
                Also more accurate calculation introduced of the change (dpsi) in
                ecliptic longitude due to nutation in AliTimestamp::GetGAST.
28-mar-2007 NvE AliTimestamp::Date extended to provide apparent sidereal time via
                specification of negative "mode" parameter.
29-mar-2007 NvE New memberfunction Almanac() introduced in AliTimestamp to provide a 
                central place for calculation of astronomical observables.
31-may-2007 NvE Memberfunctions GetNdevices, GetIdDevice and ShowDevices of AliEvent
                extended to select device classes.
23-jun-2007 NvE Support for locking introduced in AliAttrib and locked signal (and error)
                treatment implemented in SetSignal() and SetSignalError() of AliSignal.
                Also the AliSignal copy constructor has been updated for the new locking.  
08-sep-2007 NvE New memberfunctions SetEpoch and GetEpoch introduced in AliTimestamp
                for convenience.
13-sep-2007 NvE New class AliAstrolab introduced to relate (local) measurements with
                astrophysical phenomena.
13-sep-2007 NvE Hour angle info included in printout of AliAstrolab.
26-sep-2007 NvE AliTrack extended with GetNsignals for a specific signal class.
                Also AliJet extended with GetNtracks for a specified track name.
27-sep-2007 NvE New memberfunction RemoveDevice() introduced in AliEvent.
                AliAstrolab derived from TTask, to provide a base class for TTask
                based processors.
                New class AliEventSelector introduced.
03-oct-2007 NvE Class AliMath extended with statistical analysis facilities
                PsiValue and Chi2Value to investigate statistical significance
                of observations in counting experiments.
06-oct-2007 NvE Memberfunctions Chi2Value of class AliMath extended with ndf determination.
09-oct-2007 NvE Memberfunctions ResetSignals and DeleteSignals of class AliSignal
                extended with options to preserve the waveform histo contents.
                These new options are now also used in the SetSignal and SetSignalError
                memberfunctions of class AliSignal.
15-oct-2007 NvE Typo corrected in docs of AliAstrolab.cxx and memberfunctions GetMedian
                and GetSpread of AliSample.cxx extended for Y-values of histo data.
09-nov-2007 NvE Graphical skymap facilities introduced in AliAstrolab, based on the
                work by Garmt de Vries-Uiterweerd.
09-nov-2007 GdV Automatic central meridian setting only activated when meridian
                has a value smaller than -pi. This will allow also negative values
                as user input.
14-nov-2007 NvE Copy constructor and Clone() memberfunction introduced in AliObjMatrix.
02-jan-2008 NvE Command "cd .." replaced by "cd $RALICE" in the installation scripts
                to prevent problems when running an installation script from a
                different location than its original directory. 
15-mar-2008 NvE New memberfunction SetTimeScramble introduced in AliAstrolab to enable
                background and blind analyses via time scrambled observations.
17-mar-2008 NvE New memberfunction GetTimeScramble introduced in AliAstrolab and the docs
                and functionality of the time scrambling extended. The randomisation function
                is now created as a copy of the provided argument in the class.
09-apr-2008 NvE Argument "jref" added to recursive GetSignal call in case of "loc" coordinates
                for reference objects in AliAstrolab::GetSignal. This fixes a bug which only
                appeared when retrieving "loc" coordinates for reference objects. 
09-apr-2008 NvE Protection against use of null pointers "ia" and "it" introduced in
                AliAstrolab::GetDifference.
                Also blank line in docs of AliEventSelector::UseTracks removed so that
                the full docs show up in the produced html.
14-apr-2008 NvE Docs of AliAstrolab updated to represent the correct Amanda/IceCube
                local frame in the example.
03-may-2008 NvE AliSample modified to use overall double precision variables in view
                of precision issues in case of large number of entries.
13-may-2008 NvE New class AliTreeMaker introduced.
20-may-2008 NvE Several -Wshadow warnings corrected in AliCalorimeter.cxx as indicated in
                a mail by Federico Carminati. The warnings were harmless (just re-declaration
                of pointer variables) but have been fixed anyhow.
22-may-2008 NvE Event weight introduced as datamember in AliEvent.
                Memberfunction GetNsignals of AliTrack extended to allow the user to select 
                (derived) classname for the signal itself or for the parent device.
                Functionality of AliTreeMaker extended.
23-may-2008 NvE Local frame definition matrix now preserved in the copy constructor of AliAstrolab
                and also in the I/O definition in the header file.
                Also new memberfunction AliAstrolab::GetNRefSignals introduced.
                Class AliTreeMaker extended for handling AliAstrolab reference objects.
03-jun-2008 NvE All timescramble parameters first set to 0 before invoking SetTimeScramble
                in the AliAstrolab copy ctor. This prevents problems with uninitialised TF1* pointer.
04-jun-2008 NvE AliAstrolab::GetNRefSignals extended with a "mode" parameter (see docs for details).
                Also AliTreeMaker.cxx updated to use this new feature.
05-jun-2008 NvE Memberfunction SetExperiment introduced in class AliAstrolab to provide an easy
                way to set location and local frame definition for several well known experiments.
26-jun-2008 NvE WSRT and Astron parameters introduced as registered experiments in AliAstrolab.
17-jul-2008 NvE New class AliPsiDistrib of Garmt de Vries implemented.
                Also new memberfunctions introduced in class AliMath to provide (logs of) factorials
                for fractional numbers and various extreme Bayesian Psi values.
18-jul-2008 NvE Number of entries (n) in AliMath::PsiExtreme changed from Int_t to Double_t
                to allow large values. Also AliMath::PsiExtreme implemented for histogram input.
                Also maximum time difference implemented for signal retrieval in AliAstrolab.
25-jul-2008 NvE Calculation of PsiValue and Chi2Value in class AliMath extended with fractional
                number of occurrences array and also generic histogram specification.
                Also Double_t value cast to int in Psi calculation of AliPsiDistrib.cxx to prevent
                gcc compiler warning.
06-aug-2008 NvE In AliTreeMaker.cxx the statements fOuttree->AddFriend(tree) have been replaced
                by fOuttree->AddFriend(tree->GetName()) to circumvent a bug in ROOT w.r.t.
                the filename annotation. The bug has been reported to the ROOT team and a fix
                will be provided in a new ROOT release.
29-aug-2008 NvE Bug in index range fixed in GetSignal and RemoveRefSignal of AliAstrolab.
                The last ref signal was not taken into account in case the number of stored
                ref objects exactly matched the size of the array.
17-nov-2008 NvE New memberfunctions AliRandom::RanBm and AliMath::PsiPvalue introduced.
19-nov-2008 NvE AliRandom::RanBm extended with superimposed signal treatment.
20-nov-2008 NvE Also support for superimposed signal treatment introduced in AliMath::PsiPvalue.
27-nov-2008 NvE New memberfunctions GaussProb and GaussPvalue introduced in class AliMath.
06-feb-2009 NvE Support for psi-value accuracy margin concerning storage into output array introduced
                in AliRandom::RanBm.
07-feb-2009 NvE Support for psi-value retrieval via histogram introduced in AliRandom::RanBm.
                This replaces the previous extension which was based on specification of an accuracy margin.
11-feb-2009 NvE New memberfunction AliMath::MeanMu introduced to provide a facility to calculate 
                average upper/lower limits following a Feldman-Cousins approach. 
18-feb-2009 NvE New memberfunctions PoissonCriticalN and PoissonCriticalMu introduced in class AliMath
                to provide, respectively, the critical number of events and the mean for a poisson pdf
                such that a specified (maximal) p-value is obtained.
11-jun-2009 NvE Package transformed from Ralice into NCFS-Pack to increase flexibility.
12-aug-2009 NvE NcPosition::ResetPosition() now invokes directly Nc3Vector::SetZero() to regain memory space.
                NcVertex::Reset() now directly invokes NcPosition::ResetPosition().
                NcTrack::Reset() and NcJet::Reset() now invoke directly Nc4Vector::SetZero() to regain memory space.
21-sep-2009 NvE In the vector addition and subtraction memberfunctions of Nc3Vector the requirement that
                both vectors should be filled has been relaxed. Now the operation is performed when one
                of the vectors has been filled. This enables addition (or subtraction) vectors to an
                initially non-filled vector.
24-sep-2009 NvE New class NcVersion introduced.
20-oct-2009 NvE Named waveform retrieval performed via (wildcard) name pattern matching in NcSignal.
11-dec-2009 NvE Functionality of NcJet::ShowTracks() extended and NcEvent::ShowHits() introduced.
14-jan-2010 NvE Support for a user defined coincidence value introduced in NcSignal.
18-jan-2010 NvE Support for a user defined coincidence value removed again from NcSignal, since indication
                of coincidences via introducing user defined named signal slots also provides such functionality
                with even much more flexibility. So, we went back again to the previous version of NcSignal.
11-feb-2010 NvE File gcclib.sh in /scripts modified to incorporate use of the NCFS environment variable. 
                Unused variable "phi" removed in Nc3Vector::GetErrors to prevent compiler warning.
07-apr-2010 NvE File gcclib.sh in /scripts modified to list the relevant environment variables. 
08-apr-2010 NvE Docs in NcTreeMaker::UseDevices corrected.
03-jun-2010 NvE Normalisation of hypothesis histogram in NcMath::PsiValue made independent of the recorded
                number of entries to allow also histograms with user defined weights (thanks Mathieu Labare). 
28-jul-2010 NvE Treatment of "dead" signals introduced in memberfunctions SortHits and GetExtremes of the classes
                NcDevice and NcEvent and in NcEvent::SortDevices().
05-oct-2010 NvE Check on signal (error) existence introduced for the named signal (error) retrieval in NcSignal
                to prevent warning in case the slot exists but hasn't been given a signal (error) value.
27-oct-2010 NvE New member function RemoveTrack() introduced in class NcJet and existing NcJet::RemoveTracks modified
                to use this new RemoveTrack() such that all jet variables are updated correctly. 
28-oct-2010 NvE Also an internal RemoveTrack() member function introduced to provide flexibility for array compression.
24-nov-2010 NvE Memberfunctions GetNhits() and GetHit() of NcDevice extended with name specification for either hit or slot name.
16-feb-2011 NvE Support to store user data introduced in Nc4Vector to allow performance extension in NcTreeMaker, NcEventSelector,
                sorting etc. of Nc4Vector derived objects like NcTrack, NcJet and NcVertex.
17-feb-2011 NvE New memberfunctions GetSignals(), ShowSignals() and GetSignalValue() introduced in class NcTrack.
24-feb-2011 NvE Functionality of NcTreeMaker extended such that now also user data words of tracks and events can be selected.
29-mar-2011 NvE Creation of an NcEvent also introduced in NcCollider::SetOutputFile to guarantee proper settings of the
                various storage parameters.
05-apr-2011 NvE Removed explicit closing of output file in NcCollider::EndRun to prevent problems with default destructor.
07-apr-2011 NvE Functionality of NcMath::PsiExtreme extended by providing also the worst possible psi value.
05-may-2011 NvE Functionality of NcMath::PsiExtreme extended by providing also the best matching psi value for discrete counts.
                Also NcMath::PsiPvalue introduced to provide the P-value based on histogram and/or pdf input.
06-may-2011 NvE Normalisation of hypothesis histogram in NcMath::Chi2Value and NcMath::PsiExtreme made independent of the recorded
                number of entries to allow also histograms with user defined weights. 
22-jun-2011 NvE Library creation scripts for Alpha, AMD, HP and Mac updated in /scripts to use the NCFS environment variable.
23-jun-2011 NvE The NcRandom object moved as pointer into the header of NcAstrolab and seed at initialisation (when needed)
                set on basis of timestamps. This prevents repetition of the same random number when comparing various signals
                with a single reference signal in case of time scrambling (thanks Debanjan Bose for reporting).
19-jul-2011 NvE Protection against non-existing arrays fSignals and fDsignals introduced in GetSignal() and GetSignalError()
                name-specified memberfunctions of NcSignal.
27-jul-2011 NvE Zero returned in case no match found in NcAstrolab::MatchRefSignal (thanks Mathieu Labare) and docs of
                NcEventSelector updated.
07-oct-2011 NvE User interface for SetSignal and GetSignal of NcAstrolab modified in a backward incompatible way.
                The actual storage and retrieval of signals is still performed via generic functions involving 3-vectors,
                but these functions have been made protected. The user is now forced to use the new parameter driven functions
                to store/retrieve signals, as can be seen from the updated docs of NcAstrolab.
                This has been done to prevent confusion and/or mistakes in storing/retrieving signals.
                The corresponding NcAstrolab::GetSignal calls in NcTreeMaker::AstroTrack have also been modified accordingly.
13-oct-2011 NvE Position scrambling introduced in NcAstrolab.
20-oct-2011 NvE NcVersion updated to provide a Version c.q. Revision tag for the current package.
24-oct-2011 NvE Memberfunction Almanac() of class NcTimestamp extended with various solar system observables.
08-nov-2011 NvE Memberfunctions HasVector() and HasErrors() now also introduced in Nc4Vector to allow easy testing whether
                the vector components (and errors) have been set.
                The HasVector() facility is now also used in the internal memberfunction SetSignal of NcAstrolab so that
                incomplete measurements will never be used for testing against (astrophysical) reference objects.
                Docs of NcEventSelector have been updated for new NcAstrolab::SetSignal interface.
09-nov-2011 NvE Possibility for memory leak fixed in the internal memberfunction SetSignal of NcAstrolab. 
25-nov-2011 NvE Functionality of NcTimestamp::Almanac() extended and NcAstrolab::SetSolarSystem() updated accordingly.
03-jan-2012 NvE Functionality of GetTracks() and RemoveTracks() of NcJet extended to allow name pattern matching.
11-jan-2012 NvE Memberfunction GetEntry() introduced in class NcSample.
24-feb-2012 NvE Functionality of NcMath::Gamma(a,x) extended to also return gamma(a,x) instead of to P(a,x) if selected.
14-may-2012 NvE Riemann Zeta function introduced in class NcMath.
10-jul-2012 NvE Functionality of signal (info) retrieval extended for class NcJet and for NcTrack::GetSignalValue(). 
16-jul-2012 NvE NcEvent extended with the GetHitPath() and GetCOG() member functions.
17-jul-2012 NvE NcDevice::GetNhits(), NcDevice::GetHit() and NcAttrib::GetSlotIndex() extended with argument "opt" to allow
                also matching name patterns to be retrieved.
18-jul-2012 NvE Support for matching name patterns also introduced via a "mode" argument in NcTreeMaker::UseTracks().
05-oct-2012 NvE New memberfunction GetQuantile() introduced in class NcSample which is also used to actually
                determine the median value. Also the default "mode" parameter value for determining the median from a
                histogram has been changed from 1 to 0 to be compatible with standard ROOT processing.  
05-jan-2013 NvE NcEvent::GetNdevices() extended with argument "hits" to enable also the retrieval of the number of
                devices for an arbitrary array of hits.
07-jan-2013 NvE Memberfunctions AddDevice() and GetDevice() of NcEvent have been modified to work only with
                objects (derived) of class NcDevice. Some other memberfunctions of NcEvent have been updated accordingly.
                So, objects of type NcSignal or even TObject can not be entered c.q. retrieved anymore.
                The code in NcCollider.cxx has been modified accordingly to store the params as a device.
                NcVersion has been updated to version number 2.0. 
17-jan-2013 NvE Management of track hypotheses extended in NcTrack to allow also storage of only the pointer references
                instead of making private copies of the hypothesis tracks. This is steered via the new memberfunctions
                SetHypCopy() and GetHypCopy().
21-jan-2013 NvE Include of <cstdlib> introduced in NcJet, NcJob, NcPosition, NcTimestamp and NcVertex to cope with new
                C++ convention for overloading abs(). Also all char* in NcCollider replaced by TString to avoid warning
                with new gcc version.
03-mar-2013 NvE Support for several (astro)physical constants introduced in NcAstrolab and the corresponding
                GetPhysicalParameter() and SetPhysicalParameter() functions added.
                Also new memberfunctions GetPhysicalDistance() and GetNuclearMass() introduced. 
04-mar-2013 NvE Literature values for the nuclear masses of the Deuteron, Triton, Helion and Alpha particles used
                in NcAstrolab::GetNuclearMass() in view of the importance for astrophysics of these nuclei
                and the inaccuracy of the semi-empirical mass formula for very light nuclei.
06-mar-2013 NvE Parent track reference from all hypotheses tracks (if any) removed in NcTrack destructor to solve
                an invalid pointer problem in the case a parent track gets deleted before the corresponding
                track hypothesis. 
23-mar-2013 NvE New memberfunction GetSolidAngle() introduced in NcAstrolab.
08-apr-2013 NvE Memberfunction DisplaySignals() of NcAstrolab updated to provide more info in the displays.
18-aug-2013 NvE The following memberfunctions have been extended with (the use of) a user TObjArray in order to allow
                functionality without the need to use the internal multi functional storage array.
                This will decrease the probability of unintendedly overwriting certain selected c.q. ordered lists.
                Class NcJet : GetTracks, GetNtracks, RemoveTracks, SortTracks, GetSignals, GetSignalValue, ShowSignals, ShowTracks,
                              List and ListAll.
                Class NcVertex : List, ListAll and SortJets.
                Class NcTrack : GetSignals, GetSignalValue and ShowSignals.
                Class NcEvent : GetDevices, GetHits, GetNhits, LoadHits, SortHits, ShowHits, DisplayHits, GetExtremes and SortDevices.
                Class NcDevice : SortHits, DisplayHits and GetExtremes.
20-aug-2013 NvE Private array used for GetTracks() in NcTreeMaker::Track().
09-sep-2013 NvE Values of "a" and "b" interchanged in the public memberfunction NcAstrolab::GetSignal() for local coordinates
                to correctly provide the theta and phi values, respectively.
10-sep-2013 NvE NcTreeMaker::Exec() modified such that the "MJD" timestamp for "astrotracks" is now always provided
                in the output TTree, irrespective of the settings for the other tracks.
06-feb-2014 NvE Check on track HasVector() introduced in NcTreeMaker::Track() such that tracks without vector data
                are skipped.
09-apr-2014 NvE Additional NcTimestamp::SetUT() memberfunction introduced to allow easy setting of fractional seconds.
20-oct-2014 NvE Pointer to signal returned in NcAstrolab::SetSignal() and values of the (astro)physical parameters
                OmegaM and OmegaL updated according to the 2013 WMAP and PLanck data in NcAstrolab.
                Cumulative distribution functions (CDF) introduced for various probability distribution functions (PDF)
                and also the pdf p(dt|n,r) and its corresponding CDF for the Poisson and Gamma distributions added.  
27-oct-2014 NvE Functionality of NcRandom::RanBm() extended to allow (early) termination of counting experiment repetitions
                based on the number of psi values above threshold. The memberfunctions NcMath::PsiPvalue() have been adapted
                to this and also an optional filling of a histogram with observed psi values has been introduced.  
28-oct-2014 NvE Corrections for histogram underflow and overflow introduced in class NcMath for the memberfunctions
                PsiValue(), PsiExtreme(), PsiPvalue() and Chi2Value().
10-nov-2014 NvE Memberfunctions related to "NegBinomial" in class NcMath renamed to "NegBinomialn" and "NegBinomialx"
                to cope with different definitions in the literature.
                Upper tail P-values of discrete distributions in NcMath now also include the provided bin itself so that
                an upper (lower) tail P-value represents the probability to get at least (at most) the provided number of counts.
                The latter implies that the sum of the upper and lower tail P-values is larger than 1 for discrete distributions.  
04-jan-2015 NvE Functionality of memberfunctions SetUT() and SetLT() of class NcTimestamp extended.
19-feb-2015 NvE In class NcAstrolab the list of (astro)physical parameters has been updated c.q. extended and a new
                memberfunction GetNeutrinoXsection() has been introduced.
14-apr-2015 NvE In class NcMath the TH1::GetEntries() has been replaced by TH1::GetSumOfWeights() in the memberfunctions
                PsiValue(), PsiExtreme(), PsiPvalue() and Chi2Value(). This will also provide correct numbers in the case
                of histograms of which bin(s) have been filled with a weight. 
20-may-2015 NvE New memberfunctions RandomPosition() and SmearPosition() introduced in class NcAstrolab.
16-jul-2015 NvE New memberfunction GetDxHistogram() introduced in class NcAstrolab and also some cosmetic changes
                made to the titles of several PDF and CDF functions by using the TString::Format() facility.
23-jul-2015 NvE Additional (statistics) info added to the "psih" histogram in NcMath::PsiPvalue().
07-feb-2016 NvE New memberfunction LnGamma(a,x) introduced in NcMath and in NcAstrolab the following new memberfunctions
                have been introduced : GetBackgroundRatePDF, GetSignalRatePDF, GetUpperLimit, GetBackgroundRateProb
                and GetSignalRateProb.
20-feb-2016 NvE New memberfunctions GetCredibleInterval() and a GetUpperLimit() for histograms introduced in NcAstrolab.
24-mar-2016 NvE Functionality of NcCollider::SetStable() extended and measured Higgs mass introduced in NcCollider::Init().
24-mar-2016 NvE Additional formats introduced for NcAstrolab::SetLT() and "GeV" indication added in the printout
                of NcCollider::Init().
04-apr-2016 NvE New memberfunctions GetDifHistogram() and GetLogHistogram() introduced in class NcAstrolab.
12-apr-2016 NvE Memberfunctions SetProjectile() and SetTarget() extended with full 3-momentum info in class NcEvent.
                Also functionality of NcCollider extended to allow running with variable beam c.q. target momenta.
                NcVersion indicator was updated to 2.1.
28-apr-2016 NvE New memberfunction GetCountsHistogram() introduced in class NcAstrolab.
04-may-2016 NvE Argument "fact" removed from NcAstrolab::GetCountsHistogram() since an overal normalisation can also
                be specified directly in the TF1 spectrum that is provided as input.
                Also the minimal CM energy in NcCollider::Init() reduced to 1 GeV to enable (astrophysical) p+gamma
                processes near the Delta resonance threshold and introduction of a facility to initialise NcCollider
                at a different energy than at which the actual events will be generated. The latter is needed to obtain
                a proper intialisation of the various processes when running near production thresholds, c.q. event weighting
                when running at various energies.
11-may-2016 NvE Minimal CM energy for standard particle interactions in NcCollider::Init() reduced to 0 to enable also
                non head-on (astrophysical) collisions. Also new memberfunctions SetMultiple(), GetMultiple(),
                SetRandomSeed() and GetRandomSeed() introduced in class NcCollider.
12-may-2016 NvE Memberfunction NcCollider::SetEcmsMin() introduced to give the user control of setting a minimal CM energy
                for all interactions at either the initialisation or on an event by event basis.
18-may-2016 NvE Memberfunction NcJet::ReplaceTrack() introduced.
                Also the memberfunctions Boost() and Inverse() of class NcBoost improved to take automatically into account
                whether a 4-vector is in scalar mode or not. This yields more accurate results in case the invariant
                (e.g. particle mass) has been set to a precise value. 
19-may-2016 NvE Functionality of class NcCollider extended to support event generation in the CMS for frame="free" followed
                by a Lorentz transformation (using NcBoost) into the user defined frame. This allows generation of
                interactions of extremely energetic particles (e.g. Cosmic Rays) without getting blocked by various
                internal Pythia accuracy issues. 
25-may-2016 NvE NcCollider.cxx updated to correctly treat the user provided title or generate one automatically
                if no title has been provided. Also specific event generation introduced for frame="free" and win=0.
13-jun-2016 NvE New (base) class NcVeto introduced to support generic event vetoing procedures and NcEventSelector
                updated accordingly.
30-jun-2016 NvE Functionality of NcDevice::GetHits() extended.
14-jul-2016 NvE Copy constructor of NcDevice modified to also replace (backward) links of the associated hits to the new device.
15-jul-2016 NvE NcEvent::Reset() made virtual to provide more flexibility to derived classes like e.g. IceEvent.
                Also destructors of NcDevice and NcSignal modified to correctly remove (backward) links of the associated
                hits for devices that do not own the hits.
24-aug-2016 NvE Class Ncveto derived from NcDevice and not anymore from TTask to provide only an interface for setting
                a veto level in the event structure and not to serve anymore as a base class for event vetoing tasks.
26-aug-2016 NvE Memberfunction SumSignals() introduced in class NcDevice.
29-aug-2016 NvE Printout of NcSignal::List() and NcDevice::ShowHit() polished up and member function NcEvent::GetCVAL() introduced.
31-aug-2016 NvE NcDevice::GetHits() extended with the possibility to select hits with non-matching hit c.q. slot name.
                The same functionality has been introduced in NcEvent::GetHits().
12-sep-2016 NvE New member function NcDevice::SlideWindow() introduced.
13-sep-2016 NvE Functionality of NcDevice::SlideWindow() extended with optional signal index retrieval.
22-sep-2016 NvE Support for introducing, retreiving and listing of B1950 and J2000 equatorial coordinates extended in NcAstrolab.
26-sep-2016 NvE Functionality of GetDifHistogram() and GetLogHistogram() extended in class NcAstrolab.
04-nov-2016 NvE Bug for B1950 epoch coordinates fixed in internal memberfunction NcAstrolab::GetSignal()
                and the documentation of NcAstrolab::Precess() corrected.
22-nov-2016 NvE Functionality of NcAstrolab::ListSignals() extended with optional specification of the maximum number
                of reference signals to be listed.
20-sep-2017 NvE Functionality of NcAstrolab extended with support for storage of multiple measurements and the
                graphics of NcAstrolab::DisplaySignal() improved. 
10-oct-2017 NvE Functionality of NcRandom extended with support for automatic date/time driven random seed generation
                based on NcTimestamp data. This has also been implemented in NcAstrolab and new member functions
                SetRandomiser() and GetRandomiser() have been introduced to control c.q. access the internal randomiser
                of NcAstrolab.
26-nov-2017 NvE Destructor in NcCollider.cxx modified to synchronise the deletion of the output tree with the closing
                of the output file. 
01-dec-2017 NvE Destructor in NcJob.cxx modified to explicitly clear the task list without deleting the contained
                objects. This assures that the user can delete the various created tasks without problems, since in the
                TTask standard destructor the fTasks array is deleted by deleting also all contained objects.
                Depending on the order of the various deletions, the latter may provide a problem when the user (or ROOT)
                at the end of the processing deletes all the created objects. 
18-dec-2017 NvE Destructor in NcAstrolab.cxx modified to explicitly clear the task list without deleting the contained
                objects. This assures that the user can delete the various created tasks without problems, since in the
                TTask standard destructor the fTasks array is deleted by deleting also all contained objects.
                Depending on the order of the various deletions, the latter may provide a problem when the user (or ROOT)
                at the end of the processing deletes all the created objects. 
09-feb-2018 NvE Functionality of NcAstrolab::GetPhysicalDistance() extended to support various distance units.
08-mar-2018 NvE Docs of NcMath::PsiPvalue() updated to correctly indicate the default value na=0.
14-mar-2018 NvE Memberfunction NcMath::LiMaSignificance() introduced and functionality of NcAstrolab::GetSignalRatePDF()
                extended to support unequal areas and detection efficiencies for the "on source" and "off source" data.
17-jun-2018 NvE New class NcDataStreamStats introduced.
29-jun-2018 NvE New memberfunction ActivateTag() introduced in class NcDataStreamStats.
19-sep-2018 NvE Functionality of NcAstrolab::GetDxHistogram() extended with an additional bin size
                option and the documentation updated accordingly.
20-sep-2018 NvE Memberfunctions GetLuminosityDistance(), GetLightTravelDistance() and GetHubbleParameter()
                introduced to class NcAstrolab and also the values of the corresponding astrophysical parameters updated
                to the PDG 2018 values.
21-nov-2018 NvE Memberfunction KolmogorovTest() introduced to class NcAstrolab.
26-nov-2018 NvE Memberfunction GetCumulHistogram() introduced to class NcAstrolab.
                Also for histogram statistics in class NcMath it is explicitly stated that Underflow
                and/or Overflow entries are not taken into account.  
29-nov-2018 NvE Support for International Atomic Time (TAI) introduced in class NcTimestamp.
24-jan-2019 NvE Support for TAI largely extended in class NcTimestamp and also the memberfunction
                LoadUTCparameterFiles() was introduced to enable automatic loading of the corresponding
                accumulated number of Leap Seconds and dUT=UT-UTC from the IERS monitoring data files.
11-feb-2019 NvE Cosmological parameters updated according to final Planck 2018 results and also the
                functionality of the cosmological distance facilities extended.
27-feb-2019 NvE In class NcAstrolab the string "*NcAstrolab::..." in all printouts replaced by ClassName()
                so that the correct classname is indicated for derived classes.
                Also support for Unix time introduced in class NcTimestamp.
20-mar-2019 NvE New class NcFITSIO introduced to provide an I/O interface for FITS files.
                Directory ncfspack/scripts (and ncfs.sh example script in the top directory) updated
                to provide access to the CFITSIO header file "fitsio.h" on various systems.
14-apr-2019 NvE Class NcFITSIO re-designed to provide new, backward compatible, access methods.
15-sep-2019 NvE Text of all copyright notices updated.
17-sep-2019 NvE Directory /docs added to the top directory to contain the documentation information
                for all the classes of the complete NCFS framework and the ROOT macro makedocs.cc 
                updated accordingly in the top directory. Also NcVersion modified to reflect the
                GIT management structure instead of the old SVN and the version indicator in NcVersion
                has been updated to 2.2.
19-oct-2019 NvE Nc3Vector updated to store always theta in the interval [0,pi] and phi in the interval [0,twopi].
                Also the ncfs-win.sh example script added to the top directory for initialisation of the
                NCFS environment in a Windows (Ubuntu) powershell.
                The version indicator in NcVersion has been updated to 3.0.
26-jan-2020 NvE Bug fixed in Nc3Vector update of 19-oct-2019, which affected (accuracy of) astronomical positions.
                The version indicator in NcVersion has been updated to 3.1.
02-mar-2020 NvE Class NcAstrolab extended with a beta version of a toy model for the investigation of signals
                from (astrophysical) transient phenomena. Also the printout c.q. functionality of the member functions
                ListSignals(), SetCentralMeridian() and DisplaySignals() of class NcAstrolab has been extended.
                The version indicator in NcVersion has been updated to 3.2.
19-apr-2020 NvE In the memberfunctions GetImageArray() of class NcFITSIO the statement "delete[] pixels"
                has been added to prevent possible memory leak.
29-may-2020 NvE Functionality of memberfunction GetDxHistogram() of class NcAstrolab has been extended and the
                memberfunctions GetBurstBayesianPsiStatistics() and GetBurstChi2Statistics() modified accordingly.
                Also in GetBurstBayesianPsiStatistics() the range of the background Delta-t histogram has now
                been auto-determined instead of taking the same range as for the actually observed Delta-t histogram.
                This prevents entries to fall outside the histogram range and into the overflow area.
                For the range of the corresponding background Delta-t PDF the maximum range of both histograms is taken.
07-jun-2020 NvE Functionality of memberfunction Almanac() of class NcTimestamp has been extended with the
                Equation of Time and the printout of the memberfunction Date() has been extended accordingly.
                The version indicator in NcVersion has been updated to 3.3.
03-jul-2020 NvE Asymmetric time windows implemented in the burst analysis of NcAstrolab.
                Also the functionality of the burst parameters Tbint90 and Tbin redefined and the default settings
                of some burst parameters updated.  
08-jul-2020 NvE Usage of TMath::Nint() introduced in class NcAstrolab for the retrieval of the burst parameters
                Kinangle, Datype, Nmax, Inburst, Tbint90 and Ngrbs. 
05-nov-2020 NvE Protection introduced in NcFITSIO::LoadHeaderInfo() for tables with only 1 column. 
16-mar-2021 NvE Skipping of entries with p[k]<=0 introduced in NcMath::PsiExtreme().
18-mar-2021 NvE Functionality of the burst analysis in NcAstrolab extended and the macro burst-model.cc
                in folder /ncfs/physics/macros updated accordingly.
                The version indicator in NcVersion has been updated to 3.4.
19-mar-2021 NvE Unused variables removed in classes NcAstrolab and NcTimestamp to prevent compiler warnings.
                Also the compiler option -Wall replaced by -Wunused in the amdgcclib.sh compilation script
                to prevent excessive warnings with the new(er) gcc versions.
31-mar-2021 NvE Class NcSample derived from TNamed, copy constructor and Clone() memberfunctions introduced
                and functionality extended.
                The version indicator in NcVersion has been updated to 3.5.
06-apr-2021 NvE Functionality of NcSignal extended by the possibility to store NcSample objects in the same
                way as the storage of waveforms.
07-apr-2021 NvE Functionality of NcSample extended.
09-apr-2021 NvE QQ-plot and animation effects introduced in NcSample.
                The version indicator in NcVersion has been updated to 3.6.
10-apr-2021 NvE Support for user defined variable names introduced in NcSample, and unnecessary canvas update
                removed at the end of the NcSample::Animation() member functions.
                The version indicator in NcVersion has been updated to 3.7.
10-apr-2021 NvE Documentation of NcSample::GetSNR() extended with the derivation of the used formulas
                and also the creation time in NcVersion updated accordingly.
15-apr-2021 NvE Facility to remove an interval of consecutive entries introduced in NcSample
                and also the creation time in NcVersion updated accordingly.
19-apr-2021 NvE Member function Digitize() introduced in NcSample and protection for i=0 introduced
                in NcSample::Order() to ensure always a unique ordering status word.
                The version indicator in NcVersion has been updated to 3.8.
04-may-2021 NvE Enabled name and title setting in the default constructor of NcDevice.
                Also (annoying) listing of position, metric unit and 4-vector info suppressed
                for NcPosition, NcSignal, NcJet and NcVertex when these have not been set. 
07-may-2021 NvE Member functions SampleAndHold() and SampleAndSum() introduced in class NcSample.
                The version indicator in NcVersion has been updated to 3.9.
20-jun-2021 NvE Documentation of NcEvent updated.
                New flag fOwned introduced in NcSignal to indicate whether the NcSignal object
                is owned as a "hit" by an NcDevice (or derived) object. Setting of the fOwned flag has
                been introduced in NcDevice accordingly.
                The NcSignal::SetDevice() memberfunction has now been protected against pointer modification
                for owned objects, and also the input argument has been changed from TObject* to NcDevice*.
                However, the type of the datamember fDevice in NcSignal has been kept as TObject* in order to be
                backward compatible with old data files. 
                The version indicator in NcVersion has been updated to 3.10.
                ***************************************************************************************************
                *** For full backward compatibility with (very) old data, this version 3.10 should not be used. ***
                *** Due to the missing new data member "fOwned" in old data, some printouts give the impression ***
                *** that some NcSignal objects are only linked to instead of owned by the corresponding device. ***
                *** The user is advised to use earlier or later versions of the software package instead.       ***
                ***************************************************************************************************
21-jun-2021 NvE Flag "fOwned" in NcSignal changed into "fDevset" to toggle allowance to set the owning device,
                and this has been updated in NcDevice::AddHit() accordingly.
                By default "fDevset" is set to kFALSE and the NcSignal::SetDevice() memberfunction can only be invoked
                internally by NcDevice (or derived) objects to specify the device that owns the particular NcSignal (or derived) object.
                This is now fully backward compatible with the absence of this new data member in old data files.
                Also an irrelevant comment removed from NcJet.
                The version indicator in NcVersion has been updated to 3.11.
                ***************************************************************************************************
                *** Because of a bug in the NcDevice copy constructor, this version 3.11 should not be used.    ***
                *** The user is advised to use earlier or later versions of the software package instead.       ***
                ***************************************************************************************************
22-jun-2021 NvE Bug fix : Toggle of "fDevset" now also implemented in NcDevice copy constructor.
                Also the number of NcSample objects is now listed in NcEvent::ShowDevices().
23-jun-2021 NvE Introduced the memberfunction SetOwner() into class NcDevice.
                The version indicator in NcVersion has been updated to 3.12.
01-jul-2021 NvE **************************************************************************************************
                *** Preparations started for a new major release (version 4.0) with new detector functionality ***
                **************************************************************************************************
                New classes NcDetectorUnit and NcDetector introduced to provide a generic facility to define and investigate
                a detector structure and the contained signals.
                Treatment of the new detector structure (and its signals) has been implemented in NcEvent.
                However, for backward compatibility with old data files, the original internal storage array of NcEvent
                is maintained next to the new detector structure.
                The functionality of the various NcEvent memberfunctions is fully backward compatible, so all this is
                completely transparant to the user.
                Implementation of the memberfunctions GetHitPath(), GetCOG() and GetCVAL() moved from NcEvent to NcDevice
                to make them also directly available to the new classes NcDetectorUnit and NcDetector.
                However, their functionality is still available to NcEvent as well.
                The version indicator in NcVersion has been updated to 4.00.
05-jul-2021 NvE Updated some docs of NcDetectorUnit and also some cosmetics added in the printout of NcDetectorUnit::ShowDevicesTree().
06-jul-2021 NvE The default DevCopy flag set to 1 for NcDetectorUnit and NcDetector.
                Also some more docs updated for NcDevice, NcDetectorUnit and NcDetector.
09-jul-2021 NvE Introduction of the folder rnopack holding RNO-G related software.
                The version indicator in NcVersion has been updated to 4.1.
                NcSample extended with a 1 argument TGraph facility that displays the value of a certain
                variable versus the sampling entry number.
                This allows to store only 1 variable for constructing waveforms, which reduces the data volume.
                The class RnoConvert has been updated accordingly.
                The version indicator in NcVersion has been updated to 4.1/1.
10-jul-2021 NvE Memberfunction DisplaySample() introduced in class NcSignal.
                Also all auto-generated graphs given the name "NcSample" in class NcSample.
                This will allow to access these graphs via a search on their name after they are displayed.
                The auto-generated histograms still have no name, in order to prevent a ROOT warning message
                when creating multiple histograms with the same name.
                The version indicator in NcVersion has been updated to 4.2.
10-jul-2021 NvE Docs of NcSignal updated to clearly outline the intention of the storage of samples and waveforms.
                Also new memberfunction GetVariableName() introduced in class NcSample.
                The version indicator in NcVersion has been updated to 4.3.
14-jul-2021 NvE Bug fixed in the copy constructor of NcDetectorUnit.
                Also modifications in the copy constructor and AddDevice() memberfunction of NcEvent to prevent
                a flood of information messages when processing (large) event samples.
15-jul-2021 NvE New class NcTagger introduced and class NcDataStreamStats adapted accordingly.
16-jul-2021 NvE New memberfunction GetDayTimeString() introduced in class NcTimestamp.
                The version indicator in NcVersion has been updated to 4.4.
17-jul-2021 NvE New memberfunction SetSystemTime() introduced in class NcTimestamp and NcEvent::Reset() modified
                accordingly in order to properly initialize also the TAI related data.
                In NcTimestamp::LoadUTCparameterFiles() the UTC parameters are now also automatically set
                for that NcTimestamp instance. 
                The version indicator in NcVersion has been updated to 4.5.
28-jul-2021 NvE Functionality of NcTimestamp extended to allow for explicit specification of UTC or UT1.
                The version indicator in NcVersion has been updated to 4.6.
29-jul-2021 NvE Essential bug fixed in the copy constructor of class RnoStation. See the rnopack history for details.
                The version indicator in NcVersion has been updated to 4.6.1.
27-aug-2021 NvE New class NcStokes introduced.
                The version indicator in NcVersion has been updated to 4.6.2.
25-sep-2021 NvE New class NcBlocks introduced for the Bayesian Block treatment of sequential data.
                The version indicator in NcVersion has been updated to 4.6.3.
28-sep-2021 NvE Functionality of class NcSample extended to enable FIFO performance.
                The version indicator in NcVersion has been updated to 4.6.4.
25-nov-2021 NvE Channel numbering 21 and 23 swapped in class RnoDetector. See the rnopack history for details.
                The version indicator in NcVersion has been updated to 4.6.5.
01-dec-2021 NvE Printout in NcSample::SetStoreMode() extended.
                Also class RnoConvert extended to handle also pedestal data files and a separate
                member function RnoConvert::ListInput() introduced. See the rnopack history for details.
                The version indicator in NcVersion has been updated to 4.6.6.
08-dec-2021 NvE Member function NcSample::GetIndex() made public to enable external checking of the
                existence of a certain variable name.
12-dec-2021 NvE New class NcTransform introduced to provide a facility for various (e.g. Fourier) transformations.
                Also new member function NcSample::GetSubset() introduced.
                The version indicator in NcVersion has been updated to 4.7.
22-dec-2021 NvE Protection against deletion of already user deleted canvas introduced in NcAstrolab.
                Also functionality of rnopack extended; see the rnopack history for details.
                The version indicator in NcVersion has been updated to 4.7.1.
06-jan-2022 NvE Memberfunctions SetSelectLevel() and GetSelectLevel() introduced in NcEvent in order to
                enable investigation of event selections independent of the device name(s) introduced by
                the corresponding sub-task event selection processor(s).
                NcEvent::Data() has been adapted to list the event selection level.
                Also NcEventSelector has been adapted to set the event selection level in the corresponding
                NcEvent structure.
                RnoConvert has been adapted to only write out events with a proper event selection level.
                See the rnopack history for details.
                The version indicator in NcVersion has been updated to 4.8.
07-jan-2022 NvE Version indication introduced in the NcJob constructor, and RnoConvert updated accordingly.
                Also modification date/time corrected in NcEventSelector.
                Flexibility for event selection level extended in RnoConvert; see the rnopack history for details.
                The version indicator in NcVersion has been updated to 4.8.1.
06-feb-2022 NvE Support for data type LOGICAL introduced for FITS tables in class NcFITSIO.
                The version indicator in NcVersion has been updated to 4.8.2.
08-feb-2022 NvE Memberfunction IsTable() introduced in class NcFITSIO and removal of leading and trailing
                blanks corrected in NcFITSIO::GetKeywordValue().
                In the amdgcclib.sh files of the various /scripts folders is the "rm" command replaced by "rm -f"
                and is the "mv" command replaced by "rm -f" in order to prevent confirmation prompts at some systems. 
                Also a new folder /convert (and its sub-folders) to contain various format conversion facilities
                has been introduced at the top level.
                Since this folder contains Python (.py) and HTCondor (.sub) scripts, these file extensions
                have also been added to the .gitattributes file to ensure that these files will always have
                only LF line endings at checkout.
                The version indicator in NcVersion has been updated to 4.8.3.
                *** Bug fixed : Double deletion in NcFITSIO::LoadHeaderInfo() when file or HDU was not existing.
                *** After the fix the version indicator in NcVersion has been updated to 4.8.4.
09-feb-2022 NvE New memberfunction GetHDUCount() introduced in class NcFITSIO.
                The version indicator in NcVersion has been updated to 4.8.5.
15-feb-2022 NvE File path name expansion introduced in NcTimestamp::LoadUTCparameterFiles(), NcCollider::SetOutputFile(),
                NcDataStreamStats::AddInputFile(), NcTreeMaker::SetOutputFile(), RnoConvert::AddInputFile(),
                RnoConvert::SetOutputFile(), IceCalibrate::SetCalibFile() and IceXtalk::SetCalibFile().
                This will allow to use conveniently environment variables in filenames, like for instance "$(HOME)/my-data/sample.root". 
                The version indicator in NcVersion has been updated to 4.8.6.
02-mar-2022 NvE New folder /IERS introduced containing a shell script to import c.q. update the IERS
                Leap-Second and dUT data. These (updated) data will also be placed in the /IERS folder,
                together with a log file of the performed update.
                These IERS data files have now been set as default file names in NcTimestamp::LoadUTCparameterFiles(). 
                The version indicator in NcVersion has been updated to 4.8.7.
25-may-2022 NvE Functionality of class NcSample extended by the introduction of functions to enable generic
                weight and error setting for extracted histograms and graphs.
                This includes also a facility to extend a TGraph or TGraph2D into TGraphErrors or TGraph2DErrors, respectively.
                Also direct treatment of a TGraph object introduced in class NcBlocks.
                The version indicator in NcVersion has been updated to 4.8.8.
27-may-2022 NvE Functionality of class NcSample and NcBlocks extended by the introduction of function definitions
                via a simple TString input argument, which allows on the fly use of various functions.
                Also TGraph error setting in terms of RMS deviation of all the y-values introduced in NcBlocks. 
                The version indicator in NcVersion has been updated to 4.8.9.
31-may-2022 NvE Functionality of class NcBlocks extended by the introduction of member functions Add(),
                which allow to add c.q. subtract the Bayesian Block values from the original distribution.
17-jun-2022 NvE Functionality of class NcBlocks extended by the introduction of member function Rebin(),
                which will allow to convert variable binned Bayesian Block partitions into a uniformly
                binned histogram which can for instance be used for a Fourier transform.
18-jun-2022 NvE Functionality of class NcSample extended by introduction of member functions GetSamplingHistogram().
                The version indicator in NcVersion has been updated to 4.8.10.
10-jul-2022 NvE New class RnoMonitor introduced in /rnopack and also some example ROOT macros added c.q. extended
                in the folder /rnopack/macros. See rnopack/history for further details. 
                The version indicator in NcVersion has been updated to 4.9.
26-jul-2022 NvE Bug fixed in re-tagging statistics treatment of class NcDataStreamStats and default behaviour
                for NcTagger::SetPass() introduced to reflect data streams without downscaling.
                Also new class NcTaggingStats introduced and trigger info treatment extended in RnoConvert
                (see rnopack/history for further details).
01-aug-2022 NvE Data retrieval completely based on looping over the Leaf list in order to be
                completely independent of the data Tree c.q. Branch structure in RnoConvert.cxx.
                The version indicator in NcVersion has been updated to 4.10.1.
10-oct-2022 NvE New member function NcTimestamp::GetLAT() introduced, and functionality of
                NcTimestamp::GetDayTimeString() extended.
12-oct-2022 NvE Date and time string separator characters (e.g. "-", "/" or ":") replaced by "" instead of " "
                in the string processing of NcTimestamp::SetUT() memberfunctions.
16-oct-2022 NvE Docs completed c.q. corrected for input argument "U" in NcTimestamp::SetEpoch().
21-oct-2022 NvE Functionality of NcAstrolab::DisplaySignal() extended and new memberfunctions
                InitDataNames(), SetDataNames() and LoadInputData() introduced to provide a generic
                mechanism to enter (astro)physical data.
                The memberfunction LoadGCNdata(), which was part of the beta version of burst analysis,
                has been removed, since it is now replaced by LoadInputData().
                The ROOT macro burst-model.cc in the folder physics/macros has been adapted accordingly.
                The version indicator in NcVersion has been updated to 4.10.2.
27-oct-2022 NvE Support for object name indication in the (header) title and automatic centering of the
                header and footer title strings introduced in NcAstrolab::DisplaySignal().
                The version indicator in NcVersion has been updated to 4.10.3.
10-nov-2022 NvE Leading zero added (if needed) for the year indicator of object names like GRB081224 in NcAstrolab.
16-nov-2022 NvE Functionality of RnoMonitor extended with the monitoring statistics RMSdeviation,
                SpreadMean and SpreadMedian and memberfunction DefineCentralValue() renamed to
                DefineStatistic(). The corresponding example macros have been updated accordingly.
17-nov-2022 NvE In RnoConvert::Exec() the leaves list is now updated for each individual Tree in the TChain
                in order to avoid memory problems which were encountered when processing many data files in
                a stacked fashion.
                The version indicator in NcVersion has been updated to 4.10.4.
17-nov-2022 NvE Also /ice3/software/iihe/ncfs.sh replaced by the new /software/icecube/iihe/ncfs.sh
                in all the HTCondor example .sh shell scripts.
25-nov-2022 NvE To obtain better printout formatting, several "cout" statements have been replaced by "printf()"
                in NcTimestamp and NcFITSIO.
27-nov-2022 NvE Also in NcAstrolab several "cout" statements replaced by "printf() to obtain better printout formatting,
                and the functionality of PrintAngle() and PrintSignal() extended by introduction of an alignment
                parameter which provides now nice tabular like output in ListSignals().
08-dec-2022 NvE Functionality of NcBlocks extended with blocks of fixed length defined by the user on basis
                of a specified number of samplings c.q. bins.
                Also the printout of NcSample::SetStoreMode() removed and included in NcSample::Data().
19-dec-2022 NvE Functionality of RnoMonitor extended by introduction of the memberfunction SetBaselineMode()
                and the memberfunction SetDeviceClass() renamed to SetDevices() to provide more flexibility.
                The corresponding example macros have been updated accordingly.
                The version indicator in NcVersion has been updated to 4.11.
22-dec-2022 NvE New base class NcTaggingBase introduced to centralize event tag processing and the classes
                NcDataStreamStats and NcTaggingStats derived from it.
                Also a new class NcTaggingSelector introduced to enable event selection based on event
                tagging information, like for instance Trigger and Filter settings.
                The version indicator in NcVersion has been updated to 5.0.
22-dec-2022 NvE Bug fixed in NcTaggingSelector. Do not use version 5.0.
                The version indicator in NcVersion has been updated to 5.1.
07-jan-2023 NvE Input argument names of SetDevices() and SetDevice() in NcTaggingBase.h updated to bring
                them in agreement with the corresponding arguments and docs in NcTaggingBase.cxx.
                Note that the actual names specified in NcTaggingBase.h are irrelevant and serve only
                the purpose of clarity for the code. 
09-jan-2023 NvE Bug fixed and new memberfunction SetLogic() introduced in class NcTaggingSelector.
                The docs of the memberfunctions ActivateTag() and DeactivateTag() of class NcTaggingBase
                have been updated accordingly.
                Do not use version 5.0 or 5.1 for NcTaggingSelector, because of the bugs.
                The version indicator in NcVersion has been updated to 5.2.
11-jan-2023 NvE Functionality of RnoConvert::SetPrintFreq() extended by introduction of a print level.
                The version indicator in NcVersion has been updated to 5.21.
16-jan-2023 NvE Functionality of class NcAstrolab extended by introduction of the member functions
                GetRadiationLength(), GetMeanFreePath(), GetInteractionProbability(), GetSurvivalProbability(),
                GetShieldingThickness() and GetTargetThickness().
                Also the nominal gravitational acceleration value added to GetPhysicalParameter().
                The version indicator in NcVersion has been updated to 5.22.
03-feb-2023 NvE New class NcDSP introduced to provide various Digital Signal Processing tools.
                The class NcDSP replaces the class NcTransform, but the latter is kept for backward compatibility.
                The class RnoStation has been modified to use the new class NcDSP.
                The version indicator in NcVersion has been updated to 5.30.
08-feb-2023 NvE New member function FilterMovingAverage() introduced in class NcDSP.
09-feb-2023 NvE New member functions FilterLowPass(), FilterHighPass(), FilterBandPass() and FilterBandReject()
                introduced in class NcDSP.
14-feb-2023 NvE Determination of the filter kernels for FilterLowPass(), FilterHighPass(), FilterBandPass()
                and FilterBandReject() performed via internal memberfunctions of class NcDSP.
                Also new member function FilterMultiBand() introduced in class NcDSP and option "dB"
                introduced in the member function Fourier() to enable amplitude histograms in decibel.
