##############################################################
# HTCondor submit description file to process the conversion
# of RNO-G plain ROOT data into RnoEvent structures.
#
# This HTCondor script only launches 1 single job on the
# batch system and only defines the output directory.
# All input data files to be processed as well as the
# (names of) the produced output files are defined in the
# corresponding ROOT macro convert-stack.cc (see below).
#
# The produced output based on the various input files is
# recorded in a cumulative manner and provided in a single
# (stacked) output stream for each invoked analysis processor.
#
# In this HTCondor script a unique jobname is constructed 
# to identify this job on the batch system.
# This jobname is also used in the naming of the log files,
# together with the Cluster and Process name. 
#
# The actual shell script for processing is contained
# in the file convert-stack.sh, which in turn invokes
# the ROOT macro convert-stack.cc containing the C++ code.
#
# In order to launch the batch execution, the files
# convert-stack.sh and convert-stack.cc have to reside in the
# directory from which this script is invoked.
#
# To launch the job issue the command ($ = prompt) :
#
# $ condor_submit convert-stack.sub
#
# All log files will be returned into the (working aka host)
# directory from which the job was launched.
# 
# Nick van Eijndhoven, IIHE-VUB, Brussels.
# UTC July 14, 2022  16:45
##############################################################

universe   = vanilla
getenv     = TRUE
HOMEDIR    = $ENV(HOME)
HOSTDIR    = $ENV(PWD)

OUTPUTDIR  = $(HOSTDIR)

# Enable the HTCondor file transfer mechanism
should_transfer_files = YES

# Suppress the automatic transfer of output files (except for log files)
transfer_output_files=""

executable = convert-stack.sh

batch_name = convert-stack

JOBNAME    = $(batch_name)$(Process)

arguments  = $(JOBNAME) $(HOMEDIR) $(HOSTDIR) $(OUTPUTDIR)

joblog     = $(JOBNAME)-$(Cluster)-$(Process)-job.log
sublog     = $(JOBNAME)-$(Cluster)-$(Process)-sub.log

error      = $(joblog)
output     = $(joblog)
log        = $(sublog)

queue

